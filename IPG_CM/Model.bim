{
  "name": "SemanticModel",
  "compatibilityLevel": 1400,
  "model": {
    "culture": "en-US",
    "dataSources": [
      {
        "name": "Custom",
        "connectionString": "Provider=MSDASQL;Persist Security Info=False;Initial Catalog=HSD_ES;DSN=iBI DaaS",
        "impersonationMode": "impersonateServiceAccount",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "Others"
          }
        ]
      },
      {
        "type": "structured",
        "name": "AnalysisServices/ipg_iptosoc intel com;ipg_iptosoc",
        "connectionDetails": {
          "protocol": "analysis-services",
          "address": {
            "server": "ipg_iptosoc.intel.com",
            "database": "ipg_iptosoc"
          },
          "authentication": null,
          "query": null
        },
        "options": {
          "typedMeasureColumns": true,
          "implementation": "2.0"
        },
        "credential": {
          "AuthenticationKind": "ServiceAccount"
        }
      },
      {
        "name": "actis_db",
        "connectionString": "Provider=MSDASQL;DSN=PostgreSQL_actis",
        "impersonationMode": "impersonateServiceAccount",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "Others"
          }
        ]
      }
    ],
    "tables": [
      {
        "name": "iBI Query",
        "columns": [
          {
            "name": "product",
            "dataType": "string",
            "sourceColumn": "product",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Tapein",
            "dataType": "string",
            "sourceColumn": "Tapein",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ProcessNode",
            "dataType": "string",
            "sourceColumn": "ProcessNode"
          }
        ],
        "partitions": [
          {
            "name": "iBI Query",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select ",
                "a.Product",
                ",a.Tapein",
                ",min(b.[AttributeValue]) as ProcessNode",
                "from",
                "(",
                "-- Project with either TREND or POR",
                "-- Get all project and their min trend",
                "    select ",
                "    [speed id]",
                "    ,project as Product",
                "    ,min(TrendYYYYWW1) as Tapein",
                "    from",
                "    (",
                "        -- Get all project and their trend, if no trend use [POR YYYYWW]",
                "        select",
                "        distinct [speed id] ",
                "        ,project",
                "        , case",
                "        when datepart(ww, trend) is null  or datepart(ww, trend) = '' then [POR YYYYWW]",
                "        else datepart(ww, trend)",
                "        end as TrendYYYYWW1",
                "        from  [V_ATLAS_PRODUCT_MILESTONES_WITH_PROPERTIES]",
                "        where 1=1",
                "        and TrendYYYYWW1 is not null and TrendYYYYWW1 <> ''",
                "        -- 04/30/2021 Punit request only 2015 data and up",
                "        and TrendYYYYWW1 >= 201501",
                "        and milestone like '%tape in%' ",
                "        and ([Planning State] not like '%Cancelled%' and [Planning State] not like '%Delete%' and [Planning State] not like '%Abandoned%')",
                "    ) a",
                "    group by [speed id], project",
                ") a",
                "",
                "left join",
                "",
                "(",
                "select  distinct [ItemCode],[AttributeValue] ",
                "from V_RAWDATA_IPG_SPEED_ITEM_ATTRIBUTES",
                "where [AttributeName] = 'PS_DOT_PROCESS'",
                ") b",
                "",
                "on a.[speed id] = b.[ItemCode]",
                "",
                "group by ",
                "a.Product",
                ",a.Tapein"
              ],
              "dataSource": "Custom"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "a.Product",
                  ",a.Tapein",
                  ",min(b.[AttributeValue]) as ProcessNode",
                  "from",
                  "(",
                  "-- Project with either TREND or POR",
                  "-- Get all project and their min trend",
                  "    select ",
                  "    [speed id]",
                  "    ,project as Product",
                  "    ,min(TrendYYYYWW1) as Tapein",
                  "    from",
                  "    (",
                  "        -- Get all project and their trend, if no trend use [POR YYYYWW]",
                  "        select",
                  "        distinct [speed id] ",
                  "        ,project",
                  "        , case",
                  "        when datepart(ww, trend) is null  or datepart(ww, trend) = '' then [POR YYYYWW]",
                  "        else datepart(ww, trend)",
                  "        end as TrendYYYYWW1",
                  "        from  [V_ATLAS_PRODUCT_MILESTONES_WITH_PROPERTIES]",
                  "        where 1=1",
                  "        and TrendYYYYWW1 is not null and TrendYYYYWW1 <> ''",
                  "        -- 04/30/2021 Punit request only 2015 data and up",
                  "        and TrendYYYYWW1 >= 201501",
                  "        and milestone like '%tape in%' ",
                  "        and ([Planning State] not like '%Cancelled%' and [Planning State] not like '%Delete%' and [Planning State] not like '%Abandoned%')",
                  "    ) a",
                  "    group by [speed id], project",
                  ") a",
                  "",
                  "left join",
                  "",
                  "(",
                  "select  distinct [ItemCode],[AttributeValue] ",
                  "from V_RAWDATA_IPG_SPEED_ITEM_ATTRIBUTES",
                  "where [AttributeName] = 'PS_DOT_PROCESS'",
                  ") b",
                  "",
                  "on a.[speed id] = b.[ItemCode]",
                  "",
                  "group by ",
                  "a.Product",
                  ",a.Tapein</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "a.Product",
              ",a.Tapein",
              ",min(b.[AttributeValue]) as ProcessNode",
              "from",
              "(",
              "-- Project with either TREND or POR",
              "-- Get all project and their min trend",
              "    select ",
              "    [speed id]",
              "    ,project as Product",
              "    ,min(TrendYYYYWW1) as Tapein",
              "    from",
              "    (",
              "        -- Get all project and their trend, if no trend use [POR YYYYWW]",
              "        select",
              "        distinct [speed id] ",
              "        ,project",
              "        , case",
              "        when datepart(ww, trend) is null  or datepart(ww, trend) = '' then [POR YYYYWW]",
              "        else datepart(ww, trend)",
              "        end as TrendYYYYWW1",
              "        from  [V_ATLAS_PRODUCT_MILESTONES_WITH_PROPERTIES]",
              "        where 1=1",
              "        and TrendYYYYWW1 is not null and TrendYYYYWW1 <> ''",
              "        -- 04/30/2021 Punit request only 2015 data and up",
              "        and TrendYYYYWW1 >= 201501",
              "        and milestone like '%tape in%' ",
              "        and ([Planning State] not like '%Cancelled%' and [Planning State] not like '%Delete%' and [Planning State] not like '%Abandoned%')",
              "    ) a",
              "    group by [speed id], project",
              ") a",
              "",
              "left join",
              "",
              "(",
              "select  distinct [ItemCode],[AttributeValue] ",
              "from V_RAWDATA_IPG_SPEED_ITEM_ATTRIBUTES",
              "where [AttributeName] = 'PS_DOT_PROCESS'",
              ") b",
              "",
              "on a.[speed id] = b.[ItemCode]",
              "",
              "group by ",
              "a.Product",
              ",a.Tapein"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "iBI Query"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "a.Product",
              ",a.Tapein",
              ",min(b.[AttributeValue]) as ProcessNode",
              "from",
              "(",
              "-- Project with either TREND or POR",
              "-- Get all project and their min trend",
              "    select ",
              "    [speed id]",
              "    ,project as Product",
              "    ,min(TrendYYYYWW1) as Tapein",
              "    from",
              "    (",
              "        -- Get all project and their trend, if no trend use [POR YYYYWW]",
              "        select",
              "        distinct [speed id] ",
              "        ,project",
              "        , case",
              "        when datepart(ww, trend) is null  or datepart(ww, trend) = '' then [POR YYYYWW]",
              "        else datepart(ww, trend)",
              "        end as TrendYYYYWW1",
              "        from  [V_ATLAS_PRODUCT_MILESTONES_WITH_PROPERTIES]",
              "        where 1=1",
              "        and TrendYYYYWW1 is not null and TrendYYYYWW1 <> ''",
              "        -- 04/30/2021 Punit request only 2015 data and up",
              "        and TrendYYYYWW1 >= 201501",
              "        and milestone like '%tape in%' ",
              "        and ([Planning State] not like '%Cancelled%' and [Planning State] not like '%Delete%' and [Planning State] not like '%Abandoned%')",
              "    ) a",
              "    group by [speed id], project",
              ") a",
              "",
              "left join",
              "",
              "(",
              "select  distinct [ItemCode],[AttributeValue] ",
              "from V_RAWDATA_IPG_SPEED_ITEM_ATTRIBUTES",
              "where [AttributeName] = 'PS_DOT_PROCESS'",
              ") b",
              "",
              "on a.[speed id] = b.[ItemCode]",
              "",
              "group by ",
              "a.Product",
              ",a.Tapein</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "v_time_day",
        "columns": [
          {
            "name": "Intel Quarter",
            "dataType": "string",
            "sourceColumn": "Intel Quarter",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Intel Year",
            "dataType": "string",
            "sourceColumn": "Intel Year",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Intel Year-Work Week",
            "dataType": "int64",
            "sourceColumn": "Intel Year-Work Week",
            "sourceProviderType": "Integer"
          },
          {
            "name": "IntelQYYYY",
            "dataType": "string",
            "sourceColumn": "IntelQYYYY",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IntelYYYYQ",
            "dataType": "string",
            "sourceColumn": "IntelYYYYQ",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "recent_date",
            "dataType": "string",
            "sourceColumn": "recent_date",
            "sourceProviderType": "Date"
          },
          {
            "type": "calculated",
            "name": "Intel Year Num",
            "dataType": "int64",
            "isDataTypeInferred": false,
            "expression": "[Intel Year]"
          }
        ],
        "partitions": [
          {
            "name": "V_TIME_DAY",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "select distinct [Intel Quarter], [Intel Year], [Intel Year-Work Week],[Intel Quarter] + '''' + [Intel Year] as IntelQYYYY, [Intel Year] + right([Intel Quarter], 1) as IntelYYYYQ,   getdate() as recent_date from v_time_day",
              "dataSource": "Custom"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct [Intel Quarter], [Intel Year], [Intel Year-Work Week],[Intel Quarter] + '''' + [Intel Year] as IntelQYYYY, [Intel Year] + right([Intel Quarter], 1) as IntelYYYYQ,   getdate() as recent_date from v_time_day</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "select distinct [Intel Quarter], [Intel Year], [Intel Year-Work Week],[Intel Quarter] + '''' + [Intel Year] as IntelQYYYY, [Intel Year] + right([Intel Quarter], 1) as IntelYYYYQ,   getdate() as recent_date from v_time_day"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "V_TIME_DAY"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct [Intel Quarter], [Intel Year], [Intel Year-Work Week],[Intel Quarter] + '''' + [Intel Year] as IntelQYYYY, [Intel Year] + right([Intel Quarter], 1) as IntelYYYYQ,   getdate() as recent_date from v_time_day</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "IP Count",
        "columns": [
          {
            "name": "SoC",
            "dataType": "string",
            "sourceColumn": "SoC",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Total IP",
            "dataType": "int64",
            "sourceColumn": "Total IP"
          },
          {
            "name": "SIP",
            "dataType": "int64",
            "sourceColumn": "SIP"
          },
          {
            "name": "HIP",
            "dataType": "int64",
            "sourceColumn": "HIP"
          },
          {
            "type": "calculated",
            "name": "IP Count",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " 'IP Count'[Total IP] & \" (\" & 'IP Count'[SIP] & \" SIPs/ \" & 'IP Count'[HIP] & \" HIPs)\""
          }
        ],
        "partitions": [
          {
            "name": "Query",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "-- Inner [Total IP] is inaccurate as it only count rows not actual count of (SIP + HIP)",
                "\tselect distinct SoC,(SIP + HIP) as [Total IP], SIP, HIP",
                "\tfrom",
                "(\t",
                "\tselect SoC, count(soc) as [Total IP], sum(case when isSIP = 1 then 1 else 0 end) as SIP, sum(case when isHIP = 1 then 1 else 0 end) as HIP",
                "\tfrom",
                "(",
                "\tselect distinct diename as soc,   configuration,",
                "\tcase when iptype in ('SIP','Software') and ipconfigurationid > 0  then 1 else 0 end as isSIP,",
                "\tcase when iptype not in ('SIP','Software') and ipconfigurationid > 0 then 1 else 0 end as isHIP",
                "\t--isSIP + isHIP as totalIP",
                "\t--count(ipconfigurationid)",
                "\tfrom",
                "\t(",
                "\tselect   ip_to_soc.[IpConfigurationId],ip_to_soc.[Configuration],ip_to_soc.[Team],ip_to_soc.[ip hsdesid],",
                "\tip_to_soc.[IpFamily],ip_to_soc.[Supplier],ip_to_soc.[LeadProduct],ip_to_soc.[Org],ip_to_soc.[SubOrg],ip_to_soc.[IpType],",
                "\tip_to_soc.[Is IPG],",
                "\tip_to_soc.[DieID],ip_to_soc.[DieName],ip_to_soc.[DieDesignedFunctionCode],ip_to_soc.[DiePFAMItemDsc],",
                "\tip_to_soc.[SiProductItemCd],ip_to_soc.[SiProductItemDsc],ip_to_soc.[SiProductDesignedFunctionCode],ip_to_soc.[SiPFAMItemDsc],",
                "\tip_to_soc.[SecondLvlPlatformConfigID],ip_to_soc.[SecondLvlPlatformConfigNm],",
                "\tip_to_soc.[PlatformConfigID],ip_to_soc.[PlatformConfigNm],ip_to_soc.[ParentPlatformId],ip_to_soc.[ParentPlatformNm],",
                "\tip_to_soc.[Stepping Name] ,ip_to_soc.[Milestone],ip_to_soc.[SOC Drop],ip_to_soc.[SOC Date YYYYWW],ip_to_soc.[SOC Date],ip_to_soc.[SOC Date Complete],ip_to_soc.[SOC Drop order],",
                "\tip_contact.[IP PM],ip_contact.[IP Development Lead],",
                "\tip_to_soc.[Acronym]as [Die Acronym],si_acronym.[Acronym]as [Silicon Acronym],plt_acronym.[Acronym]as [Platform Acronym],",
                "\tisnull(isnull(ip_to_soc.[Acronym],si_acronym.[Acronym]),[Silicon Acronym]) as [Acronym],",
                "\tcase when  ip_to_soc.[DieID] is null then null",
                "\twhen lower(ip_to_soc.[DieName]) like '%creek%' or lower(ip_to_soc.[DieName]) like '%test%' then 'Test Chip' else 'Product' end as [Product/TC],",
                "\tcase when ip_to_soc.[SOC Drop] in ('Tape In','Power On', 'PRQ') then ip_to_soc.[Stepping Name] ",
                "\twhen ip_to_soc.[SOC Drop] in ( 'Alpha', 'Beta','PV') then ip_to_soc.[max stepping] end as [Stepping without platform stepping]",
                "\t--,speedmapping.[speed process]",
                "",
                "\tfrom",
                "\t\t(select *, ",
                "\t\tmax (case when [SOC Drop] in ('Tape In','Power On', 'PRQ') then [Stepping Name] end) over (partition by [DieID]) as [max stepping]",
                "\t\tfrom [ipg_ip_to_soc_flattened])as ip_to_soc",
                "\tleft join",
                "\t\t      (select  [IpConfigurationId],",
                "\t\t      max(case when [Caption] = 'IP Schedule Contact' then [Idsid] else null end )as [IP PM],",
                "\t\t      max(case when [Caption] = 'IP Development Lead' then [Idsid] else null end )as [IP Development Lead]",
                "\t\t      from [V_IPG_CARBON_CONTACTS] where [Caption] in('IP Development Lead', 'IP Schedule Contact')",
                "\t\t      group by  [IpConfigurationId]) as ip_contact",
                "\ton ip_to_soc.[IpConfigurationId] = ip_contact.[IpConfigurationId]",
                "\tleft join",
                "\t\t       (select   [SpeedId],[Acronym]",
                "\t\t       from  [V_IPG_CARBON_PRODUCT])as si_acronym",
                "\ton ip_to_soc .[SiProductItemCd] = si_acronym.[SpeedId]",
                "\tleft join",
                "\t\t       (select [SpeedId],[Acronym]",
                "\t\t       from  [V_IPG_CARBON_PRODUCT])as plt_acronym",
                "\ton ip_to_soc .[SecondLvlPlatformConfigID] = plt_acronym.[SpeedId]",
                "\t/*left join ",
                "\t\t(select distinct cast(ItemCode as int) as  [Speed ID], cast([AttributeValue] as varchar) as [Speed Process]",
                "\t\tfrom [V_RAWDATA_IPG_SPEED_ITEM_ATTRIBUTES]",
                "\t\twhere AttributeName = 'PS_DOT_PROCESS'",
                "\t\tand [Speed ID] >0) as speedmapping",
                "\ton ip_to_soc.dieid = speedmapping.[speed id]*/",
                "\t)a",
                "\t--where [soc date yyyyww] > 202027 and [soc date yyyyww] < 202040",
                "\t--and [is ipg] = 'Yes'",
                "",
                "\t--group by diename",
                ")a",
                "group by soc",
                ")a",
                "where SoC <> '' and SoC is not null"
              ],
              "dataSource": "Custom"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>-- Inner [Total IP] is inaccurate as it only count rows not actual count of (SIP + HIP)",
                  "\tselect distinct SoC,(SIP + HIP) as [Total IP], SIP, HIP",
                  "\tfrom",
                  "(\t",
                  "\tselect SoC, count(soc) as [Total IP], sum(case when isSIP = 1 then 1 else 0 end) as SIP, sum(case when isHIP = 1 then 1 else 0 end) as HIP",
                  "\tfrom",
                  "(",
                  "\tselect distinct diename as soc,   configuration,",
                  "\tcase when iptype in ('SIP','Software') and ipconfigurationid > 0  then 1 else 0 end as isSIP,",
                  "\tcase when iptype not in ('SIP','Software') and ipconfigurationid > 0 then 1 else 0 end as isHIP",
                  "\t--isSIP + isHIP as totalIP",
                  "\t--count(ipconfigurationid)",
                  "\tfrom",
                  "\t(",
                  "\tselect   ip_to_soc.[IpConfigurationId],ip_to_soc.[Configuration],ip_to_soc.[Team],ip_to_soc.[ip hsdesid],",
                  "\tip_to_soc.[IpFamily],ip_to_soc.[Supplier],ip_to_soc.[LeadProduct],ip_to_soc.[Org],ip_to_soc.[SubOrg],ip_to_soc.[IpType],",
                  "\tip_to_soc.[Is IPG],",
                  "\tip_to_soc.[DieID],ip_to_soc.[DieName],ip_to_soc.[DieDesignedFunctionCode],ip_to_soc.[DiePFAMItemDsc],",
                  "\tip_to_soc.[SiProductItemCd],ip_to_soc.[SiProductItemDsc],ip_to_soc.[SiProductDesignedFunctionCode],ip_to_soc.[SiPFAMItemDsc],",
                  "\tip_to_soc.[SecondLvlPlatformConfigID],ip_to_soc.[SecondLvlPlatformConfigNm],",
                  "\tip_to_soc.[PlatformConfigID],ip_to_soc.[PlatformConfigNm],ip_to_soc.[ParentPlatformId],ip_to_soc.[ParentPlatformNm],",
                  "\tip_to_soc.[Stepping Name] ,ip_to_soc.[Milestone],ip_to_soc.[SOC Drop],ip_to_soc.[SOC Date YYYYWW],ip_to_soc.[SOC Date],ip_to_soc.[SOC Date Complete],ip_to_soc.[SOC Drop order],",
                  "\tip_contact.[IP PM],ip_contact.[IP Development Lead],",
                  "\tip_to_soc.[Acronym]as [Die Acronym],si_acronym.[Acronym]as [Silicon Acronym],plt_acronym.[Acronym]as [Platform Acronym],",
                  "\tisnull(isnull(ip_to_soc.[Acronym],si_acronym.[Acronym]),[Silicon Acronym]) as [Acronym],",
                  "\tcase when  ip_to_soc.[DieID] is null then null",
                  "\twhen lower(ip_to_soc.[DieName]) like '%creek%' or lower(ip_to_soc.[DieName]) like '%test%' then 'Test Chip' else 'Product' end as [Product/TC],",
                  "\tcase when ip_to_soc.[SOC Drop] in ('Tape In','Power On', 'PRQ') then ip_to_soc.[Stepping Name] ",
                  "\twhen ip_to_soc.[SOC Drop] in ( 'Alpha', 'Beta','PV') then ip_to_soc.[max stepping] end as [Stepping without platform stepping]",
                  "\t--,speedmapping.[speed process]",
                  "",
                  "\tfrom",
                  "\t\t(select *, ",
                  "\t\tmax (case when [SOC Drop] in ('Tape In','Power On', 'PRQ') then [Stepping Name] end) over (partition by [DieID]) as [max stepping]",
                  "\t\tfrom [ipg_ip_to_soc_flattened])as ip_to_soc",
                  "\tleft join",
                  "\t\t      (select  [IpConfigurationId],",
                  "\t\t      max(case when [Caption] = 'IP Schedule Contact' then [Idsid] else null end )as [IP PM],",
                  "\t\t      max(case when [Caption] = 'IP Development Lead' then [Idsid] else null end )as [IP Development Lead]",
                  "\t\t      from [V_IPG_CARBON_CONTACTS] where [Caption] in('IP Development Lead', 'IP Schedule Contact')",
                  "\t\t      group by  [IpConfigurationId]) as ip_contact",
                  "\ton ip_to_soc.[IpConfigurationId] = ip_contact.[IpConfigurationId]",
                  "\tleft join",
                  "\t\t       (select   [SpeedId],[Acronym]",
                  "\t\t       from  [V_IPG_CARBON_PRODUCT])as si_acronym",
                  "\ton ip_to_soc .[SiProductItemCd] = si_acronym.[SpeedId]",
                  "\tleft join",
                  "\t\t       (select [SpeedId],[Acronym]",
                  "\t\t       from  [V_IPG_CARBON_PRODUCT])as plt_acronym",
                  "\ton ip_to_soc .[SecondLvlPlatformConfigID] = plt_acronym.[SpeedId]",
                  "\t/*left join ",
                  "\t\t(select distinct cast(ItemCode as int) as  [Speed ID], cast([AttributeValue] as varchar) as [Speed Process]",
                  "\t\tfrom [V_RAWDATA_IPG_SPEED_ITEM_ATTRIBUTES]",
                  "\t\twhere AttributeName = 'PS_DOT_PROCESS'",
                  "\t\tand [Speed ID] >0) as speedmapping",
                  "\ton ip_to_soc.dieid = speedmapping.[speed id]*/",
                  "\t)a",
                  "\t--where [soc date yyyyww] > 202027 and [soc date yyyyww] < 202040",
                  "\t--and [is ipg] = 'Yes'",
                  "",
                  "\t--group by diename",
                  ")a",
                  "group by soc",
                  ")a",
                  "where SoC <> '' and SoC is not null</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "-- Inner [Total IP] is inaccurate as it only count rows not actual count of (SIP + HIP)",
              "\tselect distinct SoC,(SIP + HIP) as [Total IP], SIP, HIP",
              "\tfrom",
              "(\t",
              "\tselect SoC, count(soc) as [Total IP], sum(case when isSIP = 1 then 1 else 0 end) as SIP, sum(case when isHIP = 1 then 1 else 0 end) as HIP",
              "\tfrom",
              "(",
              "\tselect distinct diename as soc,   configuration,",
              "\tcase when iptype in ('SIP','Software') and ipconfigurationid > 0  then 1 else 0 end as isSIP,",
              "\tcase when iptype not in ('SIP','Software') and ipconfigurationid > 0 then 1 else 0 end as isHIP",
              "\t--isSIP + isHIP as totalIP",
              "\t--count(ipconfigurationid)",
              "\tfrom",
              "\t(",
              "\tselect   ip_to_soc.[IpConfigurationId],ip_to_soc.[Configuration],ip_to_soc.[Team],ip_to_soc.[ip hsdesid],",
              "\tip_to_soc.[IpFamily],ip_to_soc.[Supplier],ip_to_soc.[LeadProduct],ip_to_soc.[Org],ip_to_soc.[SubOrg],ip_to_soc.[IpType],",
              "\tip_to_soc.[Is IPG],",
              "\tip_to_soc.[DieID],ip_to_soc.[DieName],ip_to_soc.[DieDesignedFunctionCode],ip_to_soc.[DiePFAMItemDsc],",
              "\tip_to_soc.[SiProductItemCd],ip_to_soc.[SiProductItemDsc],ip_to_soc.[SiProductDesignedFunctionCode],ip_to_soc.[SiPFAMItemDsc],",
              "\tip_to_soc.[SecondLvlPlatformConfigID],ip_to_soc.[SecondLvlPlatformConfigNm],",
              "\tip_to_soc.[PlatformConfigID],ip_to_soc.[PlatformConfigNm],ip_to_soc.[ParentPlatformId],ip_to_soc.[ParentPlatformNm],",
              "\tip_to_soc.[Stepping Name] ,ip_to_soc.[Milestone],ip_to_soc.[SOC Drop],ip_to_soc.[SOC Date YYYYWW],ip_to_soc.[SOC Date],ip_to_soc.[SOC Date Complete],ip_to_soc.[SOC Drop order],",
              "\tip_contact.[IP PM],ip_contact.[IP Development Lead],",
              "\tip_to_soc.[Acronym]as [Die Acronym],si_acronym.[Acronym]as [Silicon Acronym],plt_acronym.[Acronym]as [Platform Acronym],",
              "\tisnull(isnull(ip_to_soc.[Acronym],si_acronym.[Acronym]),[Silicon Acronym]) as [Acronym],",
              "\tcase when  ip_to_soc.[DieID] is null then null",
              "\twhen lower(ip_to_soc.[DieName]) like '%creek%' or lower(ip_to_soc.[DieName]) like '%test%' then 'Test Chip' else 'Product' end as [Product/TC],",
              "\tcase when ip_to_soc.[SOC Drop] in ('Tape In','Power On', 'PRQ') then ip_to_soc.[Stepping Name] ",
              "\twhen ip_to_soc.[SOC Drop] in ( 'Alpha', 'Beta','PV') then ip_to_soc.[max stepping] end as [Stepping without platform stepping]",
              "\t--,speedmapping.[speed process]",
              "",
              "\tfrom",
              "\t\t(select *, ",
              "\t\tmax (case when [SOC Drop] in ('Tape In','Power On', 'PRQ') then [Stepping Name] end) over (partition by [DieID]) as [max stepping]",
              "\t\tfrom [ipg_ip_to_soc_flattened])as ip_to_soc",
              "\tleft join",
              "\t\t      (select  [IpConfigurationId],",
              "\t\t      max(case when [Caption] = 'IP Schedule Contact' then [Idsid] else null end )as [IP PM],",
              "\t\t      max(case when [Caption] = 'IP Development Lead' then [Idsid] else null end )as [IP Development Lead]",
              "\t\t      from [V_IPG_CARBON_CONTACTS] where [Caption] in('IP Development Lead', 'IP Schedule Contact')",
              "\t\t      group by  [IpConfigurationId]) as ip_contact",
              "\ton ip_to_soc.[IpConfigurationId] = ip_contact.[IpConfigurationId]",
              "\tleft join",
              "\t\t       (select   [SpeedId],[Acronym]",
              "\t\t       from  [V_IPG_CARBON_PRODUCT])as si_acronym",
              "\ton ip_to_soc .[SiProductItemCd] = si_acronym.[SpeedId]",
              "\tleft join",
              "\t\t       (select [SpeedId],[Acronym]",
              "\t\t       from  [V_IPG_CARBON_PRODUCT])as plt_acronym",
              "\ton ip_to_soc .[SecondLvlPlatformConfigID] = plt_acronym.[SpeedId]",
              "\t/*left join ",
              "\t\t(select distinct cast(ItemCode as int) as  [Speed ID], cast([AttributeValue] as varchar) as [Speed Process]",
              "\t\tfrom [V_RAWDATA_IPG_SPEED_ITEM_ATTRIBUTES]",
              "\t\twhere AttributeName = 'PS_DOT_PROCESS'",
              "\t\tand [Speed ID] >0) as speedmapping",
              "\ton ip_to_soc.dieid = speedmapping.[speed id]*/",
              "\t)a",
              "\t--where [soc date yyyyww] > 202027 and [soc date yyyyww] < 202040",
              "\t--and [is ipg] = 'Yes'",
              "",
              "\t--group by diename",
              ")a",
              "group by soc",
              ")a",
              "where SoC <> '' and SoC is not null"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Query"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>-- Inner [Total IP] is inaccurate as it only count rows not actual count of (SIP + HIP)",
              "\tselect distinct SoC,(SIP + HIP) as [Total IP], SIP, HIP",
              "\tfrom",
              "(\t",
              "\tselect SoC, count(soc) as [Total IP], sum(case when isSIP = 1 then 1 else 0 end) as SIP, sum(case when isHIP = 1 then 1 else 0 end) as HIP",
              "\tfrom",
              "(",
              "\tselect distinct diename as soc,   configuration,",
              "\tcase when iptype in ('SIP','Software') and ipconfigurationid > 0  then 1 else 0 end as isSIP,",
              "\tcase when iptype not in ('SIP','Software') and ipconfigurationid > 0 then 1 else 0 end as isHIP",
              "\t--isSIP + isHIP as totalIP",
              "\t--count(ipconfigurationid)",
              "\tfrom",
              "\t(",
              "\tselect   ip_to_soc.[IpConfigurationId],ip_to_soc.[Configuration],ip_to_soc.[Team],ip_to_soc.[ip hsdesid],",
              "\tip_to_soc.[IpFamily],ip_to_soc.[Supplier],ip_to_soc.[LeadProduct],ip_to_soc.[Org],ip_to_soc.[SubOrg],ip_to_soc.[IpType],",
              "\tip_to_soc.[Is IPG],",
              "\tip_to_soc.[DieID],ip_to_soc.[DieName],ip_to_soc.[DieDesignedFunctionCode],ip_to_soc.[DiePFAMItemDsc],",
              "\tip_to_soc.[SiProductItemCd],ip_to_soc.[SiProductItemDsc],ip_to_soc.[SiProductDesignedFunctionCode],ip_to_soc.[SiPFAMItemDsc],",
              "\tip_to_soc.[SecondLvlPlatformConfigID],ip_to_soc.[SecondLvlPlatformConfigNm],",
              "\tip_to_soc.[PlatformConfigID],ip_to_soc.[PlatformConfigNm],ip_to_soc.[ParentPlatformId],ip_to_soc.[ParentPlatformNm],",
              "\tip_to_soc.[Stepping Name] ,ip_to_soc.[Milestone],ip_to_soc.[SOC Drop],ip_to_soc.[SOC Date YYYYWW],ip_to_soc.[SOC Date],ip_to_soc.[SOC Date Complete],ip_to_soc.[SOC Drop order],",
              "\tip_contact.[IP PM],ip_contact.[IP Development Lead],",
              "\tip_to_soc.[Acronym]as [Die Acronym],si_acronym.[Acronym]as [Silicon Acronym],plt_acronym.[Acronym]as [Platform Acronym],",
              "\tisnull(isnull(ip_to_soc.[Acronym],si_acronym.[Acronym]),[Silicon Acronym]) as [Acronym],",
              "\tcase when  ip_to_soc.[DieID] is null then null",
              "\twhen lower(ip_to_soc.[DieName]) like '%creek%' or lower(ip_to_soc.[DieName]) like '%test%' then 'Test Chip' else 'Product' end as [Product/TC],",
              "\tcase when ip_to_soc.[SOC Drop] in ('Tape In','Power On', 'PRQ') then ip_to_soc.[Stepping Name] ",
              "\twhen ip_to_soc.[SOC Drop] in ( 'Alpha', 'Beta','PV') then ip_to_soc.[max stepping] end as [Stepping without platform stepping]",
              "\t--,speedmapping.[speed process]",
              "",
              "\tfrom",
              "\t\t(select *, ",
              "\t\tmax (case when [SOC Drop] in ('Tape In','Power On', 'PRQ') then [Stepping Name] end) over (partition by [DieID]) as [max stepping]",
              "\t\tfrom [ipg_ip_to_soc_flattened])as ip_to_soc",
              "\tleft join",
              "\t\t      (select  [IpConfigurationId],",
              "\t\t      max(case when [Caption] = 'IP Schedule Contact' then [Idsid] else null end )as [IP PM],",
              "\t\t      max(case when [Caption] = 'IP Development Lead' then [Idsid] else null end )as [IP Development Lead]",
              "\t\t      from [V_IPG_CARBON_CONTACTS] where [Caption] in('IP Development Lead', 'IP Schedule Contact')",
              "\t\t      group by  [IpConfigurationId]) as ip_contact",
              "\ton ip_to_soc.[IpConfigurationId] = ip_contact.[IpConfigurationId]",
              "\tleft join",
              "\t\t       (select   [SpeedId],[Acronym]",
              "\t\t       from  [V_IPG_CARBON_PRODUCT])as si_acronym",
              "\ton ip_to_soc .[SiProductItemCd] = si_acronym.[SpeedId]",
              "\tleft join",
              "\t\t       (select [SpeedId],[Acronym]",
              "\t\t       from  [V_IPG_CARBON_PRODUCT])as plt_acronym",
              "\ton ip_to_soc .[SecondLvlPlatformConfigID] = plt_acronym.[SpeedId]",
              "\t/*left join ",
              "\t\t(select distinct cast(ItemCode as int) as  [Speed ID], cast([AttributeValue] as varchar) as [Speed Process]",
              "\t\tfrom [V_RAWDATA_IPG_SPEED_ITEM_ATTRIBUTES]",
              "\t\twhere AttributeName = 'PS_DOT_PROCESS'",
              "\t\tand [Speed ID] >0) as speedmapping",
              "\ton ip_to_soc.dieid = speedmapping.[speed id]*/",
              "\t)a",
              "\t--where [soc date yyyyww] > 202027 and [soc date yyyyww] < 202040",
              "\t--and [is ipg] = 'Yes'",
              "",
              "\t--group by diename",
              ")a",
              "group by soc",
              ")a",
              "where SoC <> '' and SoC is not null</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "IP_Customer_Enablement_Sheet",
        "columns": [
          {
            "name": "Soc",
            "dataType": "string",
            "sourceColumn": "Soc",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Acronym",
            "dataType": "string",
            "sourceColumn": "Acronym",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "TI",
            "dataType": "int64",
            "sourceColumn": "TI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Anchor Product",
            "dataType": "string",
            "sourceColumn": "Anchor Product",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Engineering Team",
            "dataType": "string",
            "sourceColumn": "Engineering Team",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Business Unit",
            "dataType": "string",
            "sourceColumn": "Business Unit",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Customer Manager",
            "dataType": "string",
            "sourceColumn": "Customer Manager",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Contract Status",
            "dataType": "string",
            "sourceColumn": "Contract Status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Contract Start ",
            "dataType": "string",
            "sourceColumn": "Contract Start ",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Contract POR",
            "dataType": "string",
            "sourceColumn": "Contract POR",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Contract Trend",
            "dataType": "string",
            "sourceColumn": "Contract Trend",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Status",
            "dataType": "string",
            "sourceColumn": "Status",
            "sortByColumn": "StatusOrder",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Escalation",
            "dataType": "string",
            "sourceColumn": "Escalation",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Trend",
            "dataType": "string",
            "sourceColumn": "Trend",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Top issues",
            "dataType": "string",
            "sourceColumn": "Top issues",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SoC Feedback",
            "dataType": "string",
            "sourceColumn": "SoC Feedback",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "WW",
            "dataType": "int64",
            "sourceColumn": "WW",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PLC Stage",
            "dataType": "string",
            "sourceColumn": "PLC Stage",
            "sourceProviderType": "VarChar"
          },
          {
            "type": "calculated",
            "name": "Color Number",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " if(IP_Customer_Enablement_Sheet[Status] = \"Red\",3, if(IP_Customer_Enablement_Sheet[Status] = \"Green\", 1, if(IP_Customer_Enablement_Sheet[Status] = \"Yellow\", 2)))"
          },
          {
            "type": "calculated",
            "name": "Individual SoC Color Trend",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": " //if(IP_Customer_Enablement_Sheet[Color Number] < RELATED(Snapshot[Color Number S]), 1, if( ISBLANK(RELATED(Snapshot[Color Number S])),2,if(IP_Customer_Enablement_Sheet[Color Number] > RELATED(Snapshot[Color Number S]), -1,  0)))"
          },
          {
            "type": "calculated",
            "name": "Summary Sort",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " if(IP_Customer_Enablement_Sheet[Status] = \"Red\",3, if(IP_Customer_Enablement_Sheet[Status] = \"Green\", 1, if(IP_Customer_Enablement_Sheet[Status] = \"Yellow\", 2)))"
          },
          {
            "type": "calculated",
            "name": "Summary Sort 2",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " if(IP_Customer_Enablement_Sheet[Status] = \"Red\",\"3\", if(IP_Customer_Enablement_Sheet[Status] = \"Green\", \"1\", if(IP_Customer_Enablement_Sheet[Status] = \"Yellow\", \"2\"))) & IP_Customer_Enablement_Sheet[SoC]"
          },
          {
            "type": "calculated",
            "name": "Trend Num",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " if(IP_Customer_Enablement_Sheet[Trend] = \"Up\", 1, if(IP_Customer_Enablement_Sheet[Trend] = \"Down\", -1, IF(IP_Customer_Enablement_Sheet[Trend] = \"Flat\", 0)))"
          },
          {
            "name": "LastUpdate",
            "dataType": "dateTime",
            "sourceColumn": "LastUpdate",
            "formatString": "MM/dd/yyyy hh:mm:ss AM/PM",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"GeneralLongDateTime\" FormatString=\"MM/dd/yyyy hh:mm:ss tt\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "WWcurrent",
            "dataType": "int64",
            "sourceColumn": "WWcurrent"
          },
          {
            "type": "calculated",
            "name": "WW_formatted_letter",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " LEFT(IP_Customer_Enablement_Sheet[WW],4) & \"ww\" & RIGHT(IP_Customer_Enablement_Sheet[WW],2)"
          },
          {
            "name": "StatusOrder",
            "dataType": "int64",
            "sourceColumn": "StatusOrder"
          },
          {
            "type": "calculated",
            "name": "IsCurrentWW",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " if(IP_Customer_Enablement_Sheet[WW] = IP_Customer_Enablement_Sheet[WWcurrent] , 1, 0)"
          },
          {
            "type": "calculated",
            "name": "ProcessNode",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " RELATED('iBI Query'[ProcessNode])"
          },
          {
            "type": "calculated",
            "name": "Tapein",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " related('iBI Query'[Tapein])"
          }
        ],
        "partitions": [
          {
            "name": "IP_Customer_Enablement",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select ",
                "[Acronym],",
                "[Anchor Product],",
                "[Business Unit],",
                "[Contract POR],",
                "[Contract Start ],",
                "[Contract Status],",
                "[Contract Trend],",
                "[Customer Manager],",
                "[Engineering Team],",
                "[Escalation],",
                "[PLC Stage],",
                "DATEADD(HOUR, -7, [Sampletime]) as LastUpdate,",
                "CASE",
                "WHEN [Soc] = 'Sapphire Rapids-SP-I EE  Die' THEN 'Sapphire Rapids-I SP EE Die'",
                "WHEN [Soc] = 'Diamond Rapids COMPUTE-38' THEN 'Diamond Rapids IO die'",
                "WHEN [Soc] = 'Lunar Lake PCH-S' THEN 'Lunar Lake SOC-P Die'",
                "ELSE [Soc]",
                "END Soc,",
                "[SoC Feedback],",
                "[Status],",
                "[TI],",
                "[Top issues],",
                "[Trend],",
                "[WW],",
                "datepart(ww,getutcdate()) as [WWcurrent]",
                ",case when [status]= 'Green' then 1",
                "\twhen [status] = 'Yellow' then 2",
                "\twhen [status] = 'Red' then 3",
                "end as StatusOrder",
                "from V_BM_IPG_CUSTOMER_MANAGEMENT_WEEKLY_SNAPSHOT"
              ],
              "dataSource": "Custom"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "[Acronym],",
                  "[Anchor Product],",
                  "[Business Unit],",
                  "[Contract POR],",
                  "[Contract Start ],",
                  "[Contract Status],",
                  "[Contract Trend],",
                  "[Customer Manager],",
                  "[Engineering Team],",
                  "[Escalation],",
                  "[PLC Stage],",
                  "DATEADD(HOUR, -7, [Sampletime]) as LastUpdate,",
                  "CASE",
                  "WHEN [Soc] = 'Sapphire Rapids-SP-I EE  Die' THEN 'Sapphire Rapids-I SP EE Die'",
                  "WHEN [Soc] = 'Diamond Rapids COMPUTE-38' THEN 'Diamond Rapids IO die'",
                  "WHEN [Soc] = 'Lunar Lake PCH-S' THEN 'Lunar Lake SOC-P Die'",
                  "ELSE [Soc]",
                  "END Soc,",
                  "[SoC Feedback],",
                  "[Status],",
                  "[TI],",
                  "[Top issues],",
                  "[Trend],",
                  "[WW],",
                  "datepart(ww,getutcdate()) as [WWcurrent]",
                  ",case when [status]= 'Green' then 1",
                  "\twhen [status] = 'Yellow' then 2",
                  "\twhen [status] = 'Red' then 3",
                  "end as StatusOrder",
                  "from V_BM_IPG_CUSTOMER_MANAGEMENT_WEEKLY_SNAPSHOT</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Dominant Color",
            "expression": " if ([Red Ratio] > 0, 3, if([Yellow Ratio] > 0, 2, 1))"
          },
          {
            "name": "Green Ratio",
            "expression": [
              "/* if(",
              "\tcalculate(COUNT(IP_Customer_Enablement_Sheet[Status]), FILTER(IP_Customer_Enablement_Sheet, IP_Customer_Enablement_Sheet[Status] = \"Green\")) = BLANK(), ",
              "\t0, ",
              "\tcalculate(COUNT(IP_Customer_Enablement_Sheet[Status]), FILTER(IP_Customer_Enablement_Sheet, IP_Customer_Enablement_Sheet[Status] = \"Green\"))",
              ")*/",
              " if(",
              "\tcalculate(COUNT(IP_Customer_Enablement_Sheet[Status]),IP_Customer_Enablement_Sheet[Status] = \"Green\", IP_Customer_Enablement_Sheet[IsCurrentWW] = 1) = BLANK(), ",
              "\t0, ",
              "\tcalculate(COUNT(IP_Customer_Enablement_Sheet[Status]),IP_Customer_Enablement_Sheet[Status] = \"Green\", IP_Customer_Enablement_Sheet[IsCurrentWW] = 1)",
              ")"
            ]
          },
          {
            "name": "Red Ratio",
            "expression": [
              " /*if(",
              "\tcalculate(COUNT(IP_Customer_Enablement_Sheet[Status]), FILTER(IP_Customer_Enablement_Sheet, IP_Customer_Enablement_Sheet[Status] = \"Red\")) = BLANK(), ",
              "\t0, ",
              "\tcalculate(COUNT(IP_Customer_Enablement_Sheet[Status]), FILTER(IP_Customer_Enablement_Sheet, IP_Customer_Enablement_Sheet[Status] = \"Red\"))",
              ")*/",
              " if(",
              "\tcalculate(COUNT(IP_Customer_Enablement_Sheet[Status]),IP_Customer_Enablement_Sheet[Status] = \"Red\", IP_Customer_Enablement_Sheet[IsCurrentWW] = 1) = BLANK(), ",
              "\t0, ",
              "\tcalculate(COUNT(IP_Customer_Enablement_Sheet[Status]),IP_Customer_Enablement_Sheet[Status] = \"Red\", IP_Customer_Enablement_Sheet[IsCurrentWW] = 1)",
              ")"
            ]
          },
          {
            "name": "Yellow Ratio",
            "expression": [
              "/* if(",
              "\tcalculate(COUNT(IP_Customer_Enablement_Sheet[Status]), FILTER(IP_Customer_Enablement_Sheet, IP_Customer_Enablement_Sheet[Status] = \"Yellow\")) = BLANK(), ",
              "\t0, ",
              "\tcalculate(COUNT(IP_Customer_Enablement_Sheet[Status]), FILTER(IP_Customer_Enablement_Sheet, IP_Customer_Enablement_Sheet[Status] = \"Yellow\"))",
              ")*/",
              " if(",
              "\tcalculate(COUNT(IP_Customer_Enablement_Sheet[Status]),IP_Customer_Enablement_Sheet[Status] = \"Yellow\", IP_Customer_Enablement_Sheet[IsCurrentWW] = 1) = BLANK(), ",
              "\t0, ",
              "\tcalculate(COUNT(IP_Customer_Enablement_Sheet[Status]),IP_Customer_Enablement_Sheet[Status] = \"Yellow\", IP_Customer_Enablement_Sheet[IsCurrentWW] = 1)",
              ")"
            ]
          },
          {
            "name": "Arrow Trend",
            "expression": "if([Color Trend] = 1, \"🡅\", if([Color Trend] = 0, \"↔\", if([Color Trend] = -1, \"🡇\")))",
            "isHidden": true
          },
          {
            "name": "Color Trend",
            "expression": " if([Dominant Color] > [Dominant Color_S], -1, if([Dominant Color]<[Dominant Color_S], 1, 0))",
            "isHidden": true
          },
          {
            "name": "StatusCountAllTime",
            "expression": "count(IP_Customer_Enablement_Sheet[Status])"
          },
          {
            "name": "StatusCount",
            "expression": [
              " CALCULATE(COUNT('IP_Customer_Enablement_Sheet'[Status]), FILTER(IP_Customer_Enablement_Sheet,IP_Customer_Enablement_Sheet[IsCurrentWW] = 1))",
              ""
            ]
          },
          {
            "name": "CummulativeStatusCountByTapein",
            "expression": " CALCULATE([StatusCount], FILTER(ALL('iBI Query'),'iBI Query'[Tapein] <= max('iBI Query'[Tapein])&&'iBI Query'[Tapein] <>\"\"))"
          },
          {
            "name": "Soc Count",
            "expression": " CALCULATE(count(IP_Customer_Enablement_Sheet[Soc]) , IP_Customer_Enablement_Sheet[IsCurrentWW] =1 )"
          },
          {
            "name": "Customer Status Summary Title",
            "expression": " \"WW\" & WEEKNUM(TODAY()) & \" Summary\""
          },
          {
            "name": "GreenStatusCount",
            "expression": [
              " ",
              "var green_status_count = CALCULATE([StatusCount], IP_Customer_Enablement_Sheet[Status] = \"Green\")",
              "RETURN",
              "if(green_status_count = BLANK(), 0, green_status_count)"
            ]
          },
          {
            "name": "RedStatusCount",
            "expression": [
              " ",
              "var red_status_count = CALCULATE([StatusCount], IP_Customer_Enablement_Sheet[Status] = \"Red\")",
              "RETURN",
              "if(red_status_count = BLANK(), 0, red_status_count)"
            ]
          },
          {
            "name": "YellowStatusCount",
            "expression": [
              " ",
              "var yellow_status_count = CALCULATE([StatusCount], IP_Customer_Enablement_Sheet[Status] = \"Yellow\")",
              "RETURN",
              "if(yellow_status_count = BLANK(), 0, yellow_status_count)"
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "[Acronym],",
              "[Anchor Product],",
              "[Business Unit],",
              "[Contract POR],",
              "[Contract Start ],",
              "[Contract Status],",
              "[Contract Trend],",
              "[Customer Manager],",
              "[Engineering Team],",
              "[Escalation],",
              "[PLC Stage],",
              "DATEADD(HOUR, -7, [Sampletime]) as LastUpdate,",
              "CASE",
              "WHEN [Soc] = 'Sapphire Rapids-SP-I EE  Die' THEN 'Sapphire Rapids-I SP EE Die'",
              "WHEN [Soc] = 'Diamond Rapids COMPUTE-38' THEN 'Diamond Rapids IO die'",
              "WHEN [Soc] = 'Lunar Lake PCH-S' THEN 'Lunar Lake SOC-P Die'",
              "ELSE [Soc]",
              "END Soc,",
              "[SoC Feedback],",
              "[Status],",
              "[TI],",
              "[Top issues],",
              "[Trend],",
              "[WW],",
              "datepart(ww,getutcdate()) as [WWcurrent]",
              ",case when [status]= 'Green' then 1",
              "\twhen [status] = 'Yellow' then 2",
              "\twhen [status] = 'Red' then 3",
              "end as StatusOrder",
              "from V_BM_IPG_CUSTOMER_MANAGEMENT_WEEKLY_SNAPSHOT"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "IP_Customer_Enablement"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "[Acronym],",
              "[Anchor Product],",
              "[Business Unit],",
              "[Contract POR],",
              "[Contract Start ],",
              "[Contract Status],",
              "[Contract Trend],",
              "[Customer Manager],",
              "[Engineering Team],",
              "[Escalation],",
              "[PLC Stage],",
              "DATEADD(HOUR, -7, [Sampletime]) as LastUpdate,",
              "CASE",
              "WHEN [Soc] = 'Sapphire Rapids-SP-I EE  Die' THEN 'Sapphire Rapids-I SP EE Die'",
              "WHEN [Soc] = 'Diamond Rapids COMPUTE-38' THEN 'Diamond Rapids IO die'",
              "WHEN [Soc] = 'Lunar Lake PCH-S' THEN 'Lunar Lake SOC-P Die'",
              "ELSE [Soc]",
              "END Soc,",
              "[SoC Feedback],",
              "[Status],",
              "[TI],",
              "[Top issues],",
              "[Trend],",
              "[WW],",
              "datepart(ww,getutcdate()) as [WWcurrent]",
              ",case when [status]= 'Green' then 1",
              "\twhen [status] = 'Yellow' then 2",
              "\twhen [status] = 'Red' then 3",
              "end as StatusOrder",
              "from V_BM_IPG_CUSTOMER_MANAGEMENT_WEEKLY_SNAPSHOT</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "cummulative_data",
        "columns": [
          {
            "name": "Acronym",
            "dataType": "string",
            "sourceColumn": "Acronym",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Anchor Product",
            "dataType": "string",
            "sourceColumn": "Anchor Product",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Business Unit",
            "dataType": "string",
            "sourceColumn": "Business Unit",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Contract POR",
            "dataType": "string",
            "sourceColumn": "Contract POR",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Contract Start ",
            "dataType": "string",
            "sourceColumn": "Contract Start ",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Contract Status",
            "dataType": "string",
            "sourceColumn": "Contract Status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Contract Trend",
            "dataType": "string",
            "sourceColumn": "Contract Trend",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Customer Manager",
            "dataType": "string",
            "sourceColumn": "Customer Manager",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Engineering Team",
            "dataType": "string",
            "sourceColumn": "Engineering Team",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Escalation",
            "dataType": "string",
            "sourceColumn": "Escalation",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PLC Stage",
            "dataType": "string",
            "sourceColumn": "PLC Stage",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Sampletime",
            "dataType": "dateTime",
            "sourceColumn": "Sampletime",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "Soc",
            "dataType": "string",
            "sourceColumn": "Soc",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SoC Feedback",
            "dataType": "string",
            "sourceColumn": "SoC Feedback",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Status",
            "dataType": "string",
            "sourceColumn": "Status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "TI",
            "dataType": "int64",
            "sourceColumn": "TI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Top issues",
            "dataType": "string",
            "sourceColumn": "Top issues",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Trend",
            "dataType": "string",
            "sourceColumn": "Trend",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "WW",
            "dataType": "int64",
            "sourceColumn": "WW",
            "sourceProviderType": "Integer"
          },
          {
            "type": "calculated",
            "name": "Color Number",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " if([Status] = \"Red\",3, if([Status] = \"Green\", 1, if([Status] = \"Yellow\", 2)))"
          }
        ],
        "partitions": [
          {
            "name": "Testing",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select ",
                "[Acronym],",
                "[Anchor Product],",
                "[Business Unit],",
                "[Contract POR],",
                "[Contract Start ],",
                "[Contract Status],",
                "[Contract Trend],",
                "[Customer Manager],",
                "[Engineering Team],",
                "[Escalation],",
                "[PLC Stage],",
                "[Sampletime],",
                "[Soc],",
                "[SoC Feedback],",
                "[Status],",
                "[TI],",
                "[Top issues],",
                "[Trend],",
                "[WW]",
                "from V_BM_IPG_CUSTOMER_MANAGEMENT_WEEKLY_SNAPSHOT"
              ],
              "dataSource": "Custom"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "[Acronym],",
                  "[Anchor Product],",
                  "[Business Unit],",
                  "[Contract POR],",
                  "[Contract Start ],",
                  "[Contract Status],",
                  "[Contract Trend],",
                  "[Customer Manager],",
                  "[Engineering Team],",
                  "[Escalation],",
                  "[PLC Stage],",
                  "[Sampletime],",
                  "[Soc],",
                  "[SoC Feedback],",
                  "[Status],",
                  "[TI],",
                  "[Top issues],",
                  "[Trend],",
                  "[WW]",
                  "from V_BM_IPG_CUSTOMER_MANAGEMENT_WEEKLY_SNAPSHOT</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "[Acronym],",
              "[Anchor Product],",
              "[Business Unit],",
              "[Contract POR],",
              "[Contract Start ],",
              "[Contract Status],",
              "[Contract Trend],",
              "[Customer Manager],",
              "[Engineering Team],",
              "[Escalation],",
              "[PLC Stage],",
              "[Sampletime],",
              "[Soc],",
              "[SoC Feedback],",
              "[Status],",
              "[TI],",
              "[Top issues],",
              "[Trend],",
              "[WW]",
              "from V_BM_IPG_CUSTOMER_MANAGEMENT_WEEKLY_SNAPSHOT"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Testing"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "[Acronym],",
              "[Anchor Product],",
              "[Business Unit],",
              "[Contract POR],",
              "[Contract Start ],",
              "[Contract Status],",
              "[Contract Trend],",
              "[Customer Manager],",
              "[Engineering Team],",
              "[Escalation],",
              "[PLC Stage],",
              "[Sampletime],",
              "[Soc],",
              "[SoC Feedback],",
              "[Status],",
              "[TI],",
              "[Top issues],",
              "[Trend],",
              "[WW]",
              "from V_BM_IPG_CUSTOMER_MANAGEMENT_WEEKLY_SNAPSHOT</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "QueryPRQDate",
        "columns": [
          {
            "name": "DieName",
            "dataType": "string",
            "sourceColumn": "DieName",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "prqdate",
            "dataType": "string",
            "sourceColumn": "prqdate",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "QueryPRQDate",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "select * from v_ipg_po_prq_date",
              "dataSource": "Custom"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select * from v_ipg_po_prq_date</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "select * from v_ipg_po_prq_date"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "QueryPRQDate"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select * from v_ipg_po_prq_date</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "v_time_day_prq",
        "columns": [
          {
            "name": "Intel Quarter",
            "dataType": "string",
            "sourceColumn": "Intel Quarter",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Intel Year",
            "dataType": "string",
            "sourceColumn": "Intel Year",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Intel Year-Work Week",
            "dataType": "int64",
            "sourceColumn": "Intel Year-Work Week",
            "sourceProviderType": "Integer"
          },
          {
            "name": "IntelQYYYY",
            "dataType": "string",
            "sourceColumn": "IntelQYYYY",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IntelYYYYQ",
            "dataType": "string",
            "sourceColumn": "IntelYYYYQ",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "recent_date",
            "dataType": "string",
            "sourceColumn": "recent_date",
            "sourceProviderType": "Date"
          },
          {
            "name": "Intel Year Num",
            "dataType": "int64",
            "sourceColumn": "Intel Year Num"
          }
        ],
        "partitions": [
          {
            "name": "v_time_day_prq",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "select distinct [Intel Quarter], [Intel Year], [Intel Year] as [Intel Year Num], [Intel Year-Work Week],[Intel Quarter] + '''' + [Intel Year] as IntelQYYYY, [Intel Year] + right([Intel Quarter], 1) as IntelYYYYQ,   getdate() as recent_date from v_time_day",
              "dataSource": "Custom"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct [Intel Quarter], [Intel Year], [Intel Year] as [Intel Year Num], [Intel Year-Work Week],[Intel Quarter] + '''' + [Intel Year] as IntelQYYYY, [Intel Year] + right([Intel Quarter], 1) as IntelYYYYQ,   getdate() as recent_date from v_time_day</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "select distinct [Intel Quarter], [Intel Year], [Intel Year] as [Intel Year Num], [Intel Year-Work Week],[Intel Quarter] + '''' + [Intel Year] as IntelQYYYY, [Intel Year] + right([Intel Quarter], 1) as IntelYYYYQ,   getdate() as recent_date from v_time_day"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "v_time_day_prq"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct [Intel Quarter], [Intel Year], [Intel Year] as [Intel Year Num], [Intel Year-Work Week],[Intel Quarter] + '''' + [Intel Year] as IntelQYYYY, [Intel Year] + right([Intel Quarter], 1) as IntelYYYYQ,   getdate() as recent_date from v_time_day</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "soc_data",
        "columns": [
          {
            "name": "DieName",
            "dataType": "string",
            "sourceColumn": "DieName"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"AnalysisServices/ipg_iptosoc intel com;ipg_iptosoc\",",
                "    Model1 = Source{[Id=\"Model\"]}[Data],",
                "    Model2 = Model1{[Id=\"Model\"]}[Data],",
                "    #\"Added Items\" = Cube.Transform(Model2,",
                "        {",
                "            {Cube.AddAndExpandDimensionColumn, \"[soc_data]\", {\"[soc_data].[DieName].[DieName]\"}, {\"soc_data.DieName\"}}",
                "        }),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Added Items\",{{\"soc_data.DieName\", \"DieName\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "ContractStatus",
        "columns": [
          {
            "name": "Contract",
            "dataType": "string",
            "sourceColumn": "Contract",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "release_affected",
            "dataType": "string",
            "sourceColumn": "release_affected",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "configuration",
            "dataType": "string",
            "sourceColumn": "configuration",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Contract Status",
            "dataType": "string",
            "sourceColumn": "Contract Status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "id",
            "dataType": "int64",
            "sourceColumn": "id",
            "formatString": "0",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "drop",
            "dataType": "string",
            "sourceColumn": "drop",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IP Execution Commits TrendDate",
            "dataType": "int64",
            "sourceColumn": "IP Execution Commits TrendDate",
            "formatString": "0",
            "sourceProviderType": "Integer"
          },
          {
            "name": "IP Execution Commits PORDate",
            "dataType": "int64",
            "sourceColumn": "IP Execution Commits PORDate",
            "formatString": "0",
            "sourceProviderType": "Integer"
          },
          {
            "name": "POR",
            "dataType": "int64",
            "sourceColumn": "POR",
            "formatString": "0"
          },
          {
            "name": "TREND",
            "dataType": "int64",
            "sourceColumn": "TREND",
            "formatString": "0"
          },
          {
            "type": "calculated",
            "name": "Delta",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " ContractStatus[POR] - ContractStatus[TREND]"
          }
        ],
        "partitions": [
          {
            "name": "ContractStatus",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select ",
                "[Contract]",
                ",release_affected",
                ",map.configuration",
                ",CAST(REPLACE(POR,'ww','') as int) as POR",
                ",CAST(REPLACE(TREND, 'ww', '') as int) as TREND",
                ",[Contract Status]",
                ",id",
                ",drop",
                ",trendyyyyww as [IP Execution Commits TrendDate]",
                ",poryyyyww as [IP Execution Commits PORDate]",
                "from ",
                "(select [ip_leadership.support.customer_project] as [Contract]",
                ", [release_affected]",
                ",[ip_leadership.support.ww_contract_close_por] as POR",
                ",[ip_leadership.support.ww_contract_close_trend] as TREND",
                ",status as [Contract Status]",
                ",id",
                "from [es.ip_leadership.support] a",
                "where 1=1 ",
                "and [ip_leadership.support.type] = 'contract'",
                "",
                "",
                "--and ww = datepart(ww, getutcdate())",
                "group by",
                "[ip_leadership.support.customer_project]",
                ", [release_affected]",
                ",[ip_leadership.support.ww_contract_close_por]",
                ",[ip_leadership.support.ww_contract_close_trend] ",
                ", status ",
                ",id",
                ")main",
                "left join (select distinct configuration, drop, trendyyyyww, poryyyyww from v_ipg_carbon_milestone where devorg = 'ipg' and ",
                "drop ='IP Execution Commit (IE)' )as map ",
                "ON ','+ main.[release_affected] +',' LIKE '%,' +map.configuration+ ',%'",
                "--WHERE 1=1 AND map.configuration IS NOT NULL",
                "group by",
                "[Contract]",
                ",release_affected",
                ",map.configuration",
                ",POR",
                ",TREND",
                ",[Contract Status]",
                ",id",
                ",drop",
                ",trendyyyyww",
                ",poryyyyww"
              ],
              "dataSource": "Custom"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "[Contract]",
                  ",release_affected",
                  ",map.configuration",
                  ",CAST(REPLACE(POR,'ww','') as int) as POR",
                  ",CAST(REPLACE(TREND, 'ww', '') as int) as TREND",
                  ",[Contract Status]",
                  ",id",
                  ",drop",
                  ",trendyyyyww as [IP Execution Commits TrendDate]",
                  ",poryyyyww as [IP Execution Commits PORDate]",
                  "from ",
                  "(select [ip_leadership.support.customer_project] as [Contract]",
                  ", [release_affected]",
                  ",[ip_leadership.support.ww_contract_close_por] as POR",
                  ",[ip_leadership.support.ww_contract_close_trend] as TREND",
                  ",status as [Contract Status]",
                  ",id",
                  "from [es.ip_leadership.support] a",
                  "where 1=1 ",
                  "and [ip_leadership.support.type] = 'contract'",
                  "",
                  "",
                  "--and ww = datepart(ww, getutcdate())",
                  "group by",
                  "[ip_leadership.support.customer_project]",
                  ", [release_affected]",
                  ",[ip_leadership.support.ww_contract_close_por]",
                  ",[ip_leadership.support.ww_contract_close_trend] ",
                  ", status ",
                  ",id",
                  ")main",
                  "left join (select distinct configuration, drop, trendyyyyww, poryyyyww from v_ipg_carbon_milestone where devorg = 'ipg' and ",
                  "drop ='IP Execution Commit (IE)' )as map ",
                  "ON ','+ main.[release_affected] +',' LIKE '%,' +map.configuration+ ',%'",
                  "--WHERE 1=1 AND map.configuration IS NOT NULL",
                  "group by",
                  "[Contract]",
                  ",release_affected",
                  ",map.configuration",
                  ",POR",
                  ",TREND",
                  ",[Contract Status]",
                  ",id",
                  ",drop",
                  ",trendyyyyww",
                  ",poryyyyww</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "[Contract]",
              ",release_affected",
              ",map.configuration",
              ",CAST(REPLACE(POR,'ww','') as int) as POR",
              ",CAST(REPLACE(TREND, 'ww', '') as int) as TREND",
              ",[Contract Status]",
              ",id",
              ",drop",
              ",trendyyyyww as [IP Execution Commits TrendDate]",
              ",poryyyyww as [IP Execution Commits PORDate]",
              "from ",
              "(select [ip_leadership.support.customer_project] as [Contract]",
              ", [release_affected]",
              ",[ip_leadership.support.ww_contract_close_por] as POR",
              ",[ip_leadership.support.ww_contract_close_trend] as TREND",
              ",status as [Contract Status]",
              ",id",
              "from [es.ip_leadership.support] a",
              "where 1=1 ",
              "and [ip_leadership.support.type] = 'contract'",
              "",
              "",
              "--and ww = datepart(ww, getutcdate())",
              "group by",
              "[ip_leadership.support.customer_project]",
              ", [release_affected]",
              ",[ip_leadership.support.ww_contract_close_por]",
              ",[ip_leadership.support.ww_contract_close_trend] ",
              ", status ",
              ",id",
              ")main",
              "left join (select distinct configuration, drop, trendyyyyww, poryyyyww from v_ipg_carbon_milestone where devorg = 'ipg' and ",
              "drop ='IP Execution Commit (IE)' )as map ",
              "ON ','+ main.[release_affected] +',' LIKE '%,' +map.configuration+ ',%'",
              "--WHERE 1=1 AND map.configuration IS NOT NULL",
              "group by",
              "[Contract]",
              ",release_affected",
              ",map.configuration",
              ",POR",
              ",TREND",
              ",[Contract Status]",
              ",id",
              ",drop",
              ",trendyyyyww",
              ",poryyyyww"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "ContractStatus"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "[Contract]",
              ",release_affected",
              ",map.configuration",
              ",CAST(REPLACE(POR,'ww','') as int) as POR",
              ",CAST(REPLACE(TREND, 'ww', '') as int) as TREND",
              ",[Contract Status]",
              ",id",
              ",drop",
              ",trendyyyyww as [IP Execution Commits TrendDate]",
              ",poryyyyww as [IP Execution Commits PORDate]",
              "from ",
              "(select [ip_leadership.support.customer_project] as [Contract]",
              ", [release_affected]",
              ",[ip_leadership.support.ww_contract_close_por] as POR",
              ",[ip_leadership.support.ww_contract_close_trend] as TREND",
              ",status as [Contract Status]",
              ",id",
              "from [es.ip_leadership.support] a",
              "where 1=1 ",
              "and [ip_leadership.support.type] = 'contract'",
              "",
              "",
              "--and ww = datepart(ww, getutcdate())",
              "group by",
              "[ip_leadership.support.customer_project]",
              ", [release_affected]",
              ",[ip_leadership.support.ww_contract_close_por]",
              ",[ip_leadership.support.ww_contract_close_trend] ",
              ", status ",
              ",id",
              ")main",
              "left join (select distinct configuration, drop, trendyyyyww, poryyyyww from v_ipg_carbon_milestone where devorg = 'ipg' and ",
              "drop ='IP Execution Commit (IE)' )as map ",
              "ON ','+ main.[release_affected] +',' LIKE '%,' +map.configuration+ ',%'",
              "--WHERE 1=1 AND map.configuration IS NOT NULL",
              "group by",
              "[Contract]",
              ",release_affected",
              ",map.configuration",
              ",POR",
              ",TREND",
              ",[Contract Status]",
              ",id",
              ",drop",
              ",trendyyyyww",
              ",poryyyyww</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "QueryExecutiveSummary",
        "columns": [
          {
            "name": "f_id",
            "dataType": "int64",
            "sourceColumn": "f_id",
            "sourceProviderType": "Integer"
          },
          {
            "name": "f_notes",
            "dataType": "string",
            "sourceColumn": "f_notes",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "f_sample_time",
            "dataType": "dateTime",
            "sourceColumn": "f_sample_time",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          }
        ],
        "partitions": [
          {
            "name": "Query",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "select * from t_notes",
              "dataSource": "actis_db"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select * from t_notes</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "select * from t_notes"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Query"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select * from t_notes</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "release_central_family",
        "columns": [
          {
            "name": "release_central_family.Architecture_Lead",
            "dataType": "string",
            "sourceColumn": "release_central_family.Architecture_Lead"
          },
          {
            "name": "release_central_family.Architecture_Lead_Name",
            "dataType": "string",
            "sourceColumn": "release_central_family.Architecture_Lead_Name"
          },
          {
            "name": "release_central_family.Description",
            "dataType": "string",
            "sourceColumn": "release_central_family.Description"
          },
          {
            "name": "release_central_family.Dev_Lead",
            "dataType": "string",
            "sourceColumn": "release_central_family.Dev_Lead"
          },
          {
            "name": "release_central_family.Dev_Lead_Name",
            "dataType": "string",
            "sourceColumn": "release_central_family.Dev_Lead_Name"
          },
          {
            "name": "release_central_family.Gladius",
            "dataType": "string",
            "sourceColumn": "release_central_family.Gladius"
          },
          {
            "name": "release_central_family.id",
            "dataType": "string",
            "sourceColumn": "release_central_family.id"
          },
          {
            "name": "release_central_family.IpFamily",
            "dataType": "string",
            "sourceColumn": "release_central_family.IpFamily"
          },
          {
            "name": "IpFamilyId",
            "dataType": "string",
            "sourceColumn": "release_central_family.IpFamilyId"
          },
          {
            "name": "release_central_family.old IpFamily",
            "dataType": "string",
            "sourceColumn": "release_central_family.old IpFamily"
          },
          {
            "name": "release_central_family.Product_Owner",
            "dataType": "string",
            "sourceColumn": "release_central_family.Product_Owner"
          },
          {
            "name": "release_central_family.Product_Owner_Name",
            "dataType": "string",
            "sourceColumn": "release_central_family.Product_Owner_Name"
          },
          {
            "name": "release_central_family.ProductFamily",
            "dataType": "string",
            "sourceColumn": "release_central_family.ProductFamily"
          },
          {
            "name": "release_central_family.ProductFamily without IP",
            "dataType": "string",
            "sourceColumn": "release_central_family.ProductFamily without IP"
          },
          {
            "name": "release_central_family.Program_Manager",
            "dataType": "string",
            "sourceColumn": "release_central_family.Program_Manager"
          },
          {
            "name": "release_central_family.Program_Manager_Name",
            "dataType": "string",
            "sourceColumn": "release_central_family.Program_Manager_Name"
          },
          {
            "name": "release_central_family.SubOrg",
            "dataType": "string",
            "sourceColumn": "release_central_family.SubOrg"
          },
          {
            "name": "release_central_family.Supplier",
            "dataType": "string",
            "sourceColumn": "release_central_family.Supplier"
          },
          {
            "name": "release_central_family.Support_Lead",
            "dataType": "string",
            "sourceColumn": "release_central_family.Support_Lead"
          },
          {
            "name": "release_central_family.Support_Lead_Name",
            "dataType": "string",
            "sourceColumn": "release_central_family.Support_Lead_Name"
          },
          {
            "name": "AGG of ProductFamily",
            "dataType": "string",
            "sourceColumn": "AGG of ProductFamily"
          },
          {
            "name": "IpConfigurationId",
            "dataType": "string",
            "sourceColumn": "release_central_family.IpConfigurationId"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"AnalysisServices/ipg_iptosoc intel com;ipg_iptosoc\",",
                "    Model1 = Source{[Id=\"Model\"]}[Data],",
                "    Model2 = Model1{[Id=\"Model\"]}[Data],",
                "    #\"Added Items\" = Cube.Transform(Model2,",
                "        {",
                "            {Cube.AddAndExpandDimensionColumn, \"[release_central_family]\", {\"[release_central_family].[Architecture_Lead].[Architecture_Lead]\", \"[release_central_family].[Architecture_Lead_Name].[Architecture_Lead_Name]\", \"[release_central_family].[Description].[Description]\", \"[release_central_family].[Dev_Lead].[Dev_Lead]\", \"[release_central_family].[Dev_Lead_Name].[Dev_Lead_Name]\", \"[release_central_family].[Gladius].[Gladius]\", \"[release_central_family].[id].[id]\", \"[release_central_family].[IpFamily].[IpFamily]\", \"[release_central_family].[IpFamilyId].[IpFamilyId]\", \"[release_central_family].[IpConfigurationId].[IpConfigurationId]\", \"[release_central_family].[old IpFamily].[old IpFamily]\", \"[release_central_family].[Product_Owner].[Product_Owner]\", \"[release_central_family].[Product_Owner_Name].[Product_Owner_Name]\", \"[release_central_family].[ProductFamily].[ProductFamily]\", \"[release_central_family].[ProductFamily without IP].[ProductFamily without IP]\", \"[release_central_family].[Program_Manager].[Program_Manager]\", \"[release_central_family].[Program_Manager_Name].[Program_Manager_Name]\", \"[release_central_family].[SubOrg].[SubOrg]\", \"[release_central_family].[Supplier].[Supplier]\", \"[release_central_family].[Support_Lead].[Support_Lead]\", \"[release_central_family].[Support_Lead_Name].[Support_Lead_Name]\"}, {\"release_central_family.Architecture_Lead\", \"release_central_family.Architecture_Lead_Name\", \"release_central_family.Description\", \"release_central_family.Dev_Lead\", \"release_central_family.Dev_Lead_Name\", \"release_central_family.Gladius\", \"release_central_family.id\", \"release_central_family.IpFamily\", \"release_central_family.IpFamilyId\",\"release_central_family.IpConfigurationId\", \"release_central_family.old IpFamily\", \"release_central_family.Product_Owner\", \"release_central_family.Product_Owner_Name\", \"release_central_family.ProductFamily\", \"release_central_family.ProductFamily without IP\", \"release_central_family.Program_Manager\", \"release_central_family.Program_Manager_Name\", \"release_central_family.SubOrg\", \"release_central_family.Supplier\", \"release_central_family.Support_Lead\", \"release_central_family.Support_Lead_Name\"}},",
                "            {Cube.AddMeasureColumn, \"AGG of ProductFamily\", \"[Measures].[AGG of ProductFamily]\"}",
                "        })",
                "in",
                "    #\"Added Items\""
              ]
            }
          }
        ]
      },
      {
        "name": "ip_data",
        "columns": [
          {
            "name": "ip_data.AffectedProducts",
            "dataType": "string",
            "sourceColumn": "ip_data.AffectedProducts"
          },
          {
            "name": "ip_data.Bug Escape Link",
            "dataType": "string",
            "sourceColumn": "ip_data.Bug Escape Link"
          },
          {
            "name": "ip_data.Carbon milestone link",
            "dataType": "string",
            "sourceColumn": "ip_data.Carbon milestone link"
          },
          {
            "name": "ip_data.Configuration",
            "dataType": "string",
            "sourceColumn": "ip_data.Configuration"
          },
          {
            "name": "ip_data.Configuration_std_cells",
            "dataType": "string",
            "sourceColumn": "ip_data.Configuration_std_cells"
          },
          {
            "name": "ip_data.Count of IPs",
            "dataType": "string",
            "sourceColumn": "ip_data.Count of IPs"
          },
          {
            "name": "ip_data.Domain",
            "dataType": "string",
            "sourceColumn": "ip_data.Domain"
          },
          {
            "name": "ip_data.HIP/SIP",
            "dataType": "string",
            "sourceColumn": "ip_data.HIP/SIP"
          },
          {
            "name": "ip_data.HsdEsId",
            "dataType": "string",
            "sourceColumn": "ip_data.HsdEsId"
          },
          {
            "name": "ip_data.Incoming and Closed bugs Link",
            "dataType": "string",
            "sourceColumn": "ip_data.Incoming and Closed bugs Link"
          },
          {
            "name": "IpConfigurationId",
            "dataType": "string",
            "sourceColumn": "ip_data.IpConfigurationId"
          },
          {
            "name": "ip_data.IPFamily",
            "dataType": "string",
            "sourceColumn": "ip_data.IPFamily"
          },
          {
            "name": "IpFamilyId",
            "dataType": "string",
            "sourceColumn": "ip_data.IpFamilyId"
          },
          {
            "name": "ip_data.IpGeneration",
            "dataType": "string",
            "sourceColumn": "ip_data.IpGeneration"
          },
          {
            "name": "ip_data.IpType",
            "dataType": "string",
            "sourceColumn": "ip_data.IpType"
          },
          {
            "name": "ip_data.Is AMS",
            "dataType": "string",
            "sourceColumn": "ip_data.Is AMS"
          },
          {
            "name": "ip_data.Is HIP",
            "dataType": "string",
            "sourceColumn": "ip_data.Is HIP"
          },
          {
            "name": "ip_data.Is SIP",
            "dataType": "string",
            "sourceColumn": "ip_data.Is SIP"
          },
          {
            "name": "ip_data.is_std_cells",
            "dataType": "string",
            "sourceColumn": "ip_data.is_std_cells"
          },
          {
            "name": "ip_data.IsClosed",
            "dataType": "string",
            "sourceColumn": "ip_data.IsClosed"
          },
          {
            "name": "ip_data.IsFunded",
            "dataType": "string",
            "sourceColumn": "ip_data.IsFunded"
          },
          {
            "name": "ip_data.IsRequestable",
            "dataType": "string",
            "sourceColumn": "ip_data.IsRequestable"
          },
          {
            "name": "ip_data.IsUnrequestable",
            "dataType": "string",
            "sourceColumn": "ip_data.IsUnrequestable"
          },
          {
            "name": "ip_data.LeadAffectedProduct",
            "dataType": "string",
            "sourceColumn": "ip_data.LeadAffectedProduct"
          },
          {
            "name": "ip_data.LeadProduct",
            "dataType": "string",
            "sourceColumn": "ip_data.LeadProduct"
          },
          {
            "name": "ip_data.Lifecycle",
            "dataType": "string",
            "sourceColumn": "ip_data.Lifecycle"
          },
          {
            "name": "ip_data.MDG Name",
            "dataType": "string",
            "sourceColumn": "ip_data.MDG Name"
          },
          {
            "name": "ip_data.Node",
            "dataType": "string",
            "sourceColumn": "ip_data.Node"
          },
          {
            "name": "ip_data.old_IpFamily",
            "dataType": "string",
            "sourceColumn": "ip_data.old_IpFamily"
          },
          {
            "name": "ip_data.Org",
            "dataType": "string",
            "sourceColumn": "ip_data.Org"
          },
          {
            "name": "ip_data.PlanningStatus",
            "dataType": "string",
            "sourceColumn": "ip_data.PlanningStatus"
          },
          {
            "name": "ip_data.Process",
            "dataType": "string",
            "sourceColumn": "ip_data.Process"
          },
          {
            "name": "ip_data.RequestingProducts",
            "dataType": "string",
            "sourceColumn": "ip_data.RequestingProducts"
          },
          {
            "name": "ip_data.Reuse",
            "dataType": "string",
            "sourceColumn": "ip_data.Reuse"
          },
          {
            "name": "ip_data.std_cells_process",
            "dataType": "string",
            "sourceColumn": "ip_data.std_cells_process"
          },
          {
            "name": "ip_data.std_cells_process_length",
            "dataType": "string",
            "sourceColumn": "ip_data.std_cells_process_length"
          },
          {
            "name": "ip_data.std_cells_process_step1",
            "dataType": "string",
            "sourceColumn": "ip_data.std_cells_process_step1"
          },
          {
            "name": "ip_data.SubDomain",
            "dataType": "string",
            "sourceColumn": "ip_data.SubDomain"
          },
          {
            "name": "ip_data.SubOrg",
            "dataType": "string",
            "sourceColumn": "ip_data.SubOrg"
          },
          {
            "name": "ip_data.Supplier",
            "dataType": "string",
            "sourceColumn": "ip_data.Supplier"
          },
          {
            "name": "ip_data.TopLevelModuleName",
            "dataType": "string",
            "sourceColumn": "ip_data.TopLevelModuleName"
          },
          {
            "name": "Count of SIP",
            "dataType": "int64",
            "sourceColumn": "Count of SIP"
          },
          {
            "name": "Count of HIP",
            "dataType": "int64",
            "sourceColumn": "Count of HIP"
          },
          {
            "name": "Count of configurations",
            "dataType": "int64",
            "sourceColumn": "Count of configurations"
          },
          {
            "name": "Count of Soft IPs/Hard IPs",
            "dataType": "string",
            "sourceColumn": "Count of Soft IPs/Hard IPs"
          },
          {
            "name": "Count of configurations with ALL filters",
            "dataType": "int64",
            "sourceColumn": "Count of configurations with ALL filters"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"AnalysisServices/ipg_iptosoc intel com;ipg_iptosoc\",",
                "    Model1 = Source{[Id=\"Model\"]}[Data],",
                "    Model2 = Model1{[Id=\"Model\"]}[Data],",
                "    #\"Added Items\" = Cube.Transform(Model2,",
                "        {",
                "            {Cube.AddAndExpandDimensionColumn, \"[ip_data]\", {\"[ip_data].[AffectedProducts].[AffectedProducts]\", \"[ip_data].[Bug Escape Link].[Bug Escape Link]\", \"[ip_data].[Carbon milestone link].[Carbon milestone link]\", \"[ip_data].[Configuration].[Configuration]\", \"[ip_data].[Configuration_std_cells].[Configuration_std_cells]\", \"[ip_data].[Count of IPs].[Count of IPs]\", \"[ip_data].[Domain].[Domain]\", \"[ip_data].[HIP/SIP].[HIP/SIP]\", \"[ip_data].[HsdEsId].[HsdEsId]\", \"[ip_data].[Incoming and Closed bugs Link].[Incoming and Closed bugs Link]\", \"[ip_data].[IpConfigurationId].[IpConfigurationId]\", \"[ip_data].[IPFamily].[IPFamily]\", \"[ip_data].[IpFamilyId].[IpFamilyId]\", \"[ip_data].[IpGeneration].[IpGeneration]\", \"[ip_data].[IpType].[IpType]\", \"[ip_data].[Is AMS].[Is AMS]\", \"[ip_data].[Is HIP].[Is HIP]\", \"[ip_data].[Is SIP].[Is SIP]\", \"[ip_data].[is_std_cells].[is_std_cells]\", \"[ip_data].[IsClosed].[IsClosed]\", \"[ip_data].[IsFunded].[IsFunded]\", \"[ip_data].[IsRequestable].[IsRequestable]\", \"[ip_data].[IsUnrequestable].[IsUnrequestable]\", \"[ip_data].[LeadAffectedProduct].[LeadAffectedProduct]\", \"[ip_data].[LeadProduct].[LeadProduct]\", \"[ip_data].[Lifecycle].[Lifecycle]\", \"[ip_data].[MDG Name].[MDG Name]\", \"[ip_data].[Node].[Node]\", \"[ip_data].[old_IpFamily].[old_IpFamily]\", \"[ip_data].[Org].[Org]\", \"[ip_data].[PlanningStatus].[PlanningStatus]\", \"[ip_data].[Process].[Process]\", \"[ip_data].[RequestingProducts].[RequestingProducts]\", \"[ip_data].[Reuse].[Reuse]\", \"[ip_data].[std_cells_process].[std_cells_process]\", \"[ip_data].[std_cells_process_length].[std_cells_process_length]\", \"[ip_data].[std_cells_process_step1].[std_cells_process_step1]\", \"[ip_data].[SubDomain].[SubDomain]\", \"[ip_data].[SubOrg].[SubOrg]\", \"[ip_data].[Supplier].[Supplier]\", \"[ip_data].[TopLevelModuleName].[TopLevelModuleName]\"}, {\"ip_data.AffectedProducts\", \"ip_data.Bug Escape Link\", \"ip_data.Carbon milestone link\", \"ip_data.Configuration\", \"ip_data.Configuration_std_cells\", \"ip_data.Count of IPs\", \"ip_data.Domain\", \"ip_data.HIP/SIP\", \"ip_data.HsdEsId\", \"ip_data.Incoming and Closed bugs Link\", \"ip_data.IpConfigurationId\", \"ip_data.IPFamily\", \"ip_data.IpFamilyId\", \"ip_data.IpGeneration\", \"ip_data.IpType\", \"ip_data.Is AMS\", \"ip_data.Is HIP\", \"ip_data.Is SIP\", \"ip_data.is_std_cells\", \"ip_data.IsClosed\", \"ip_data.IsFunded\", \"ip_data.IsRequestable\", \"ip_data.IsUnrequestable\", \"ip_data.LeadAffectedProduct\", \"ip_data.LeadProduct\", \"ip_data.Lifecycle\", \"ip_data.MDG Name\", \"ip_data.Node\", \"ip_data.old_IpFamily\", \"ip_data.Org\", \"ip_data.PlanningStatus\", \"ip_data.Process\", \"ip_data.RequestingProducts\", \"ip_data.Reuse\", \"ip_data.std_cells_process\", \"ip_data.std_cells_process_length\", \"ip_data.std_cells_process_step1\", \"ip_data.SubDomain\", \"ip_data.SubOrg\", \"ip_data.Supplier\", \"ip_data.TopLevelModuleName\"}},",
                "            {Cube.AddMeasureColumn, \"Count of SIP\", \"[Measures].[Count of SIP]\"},",
                "            {Cube.AddMeasureColumn, \"Count of HIP\", \"[Measures].[Count of HIP]\"},",
                "            {Cube.AddMeasureColumn, \"Count of configurations\", \"[Measures].[Count of configurations]\"},",
                "            {Cube.AddMeasureColumn, \"Count of Soft IPs/Hard IPs\", \"[Measures].[Count of Soft IPs/Hard IPs]\"},",
                "            {Cube.AddMeasureColumn, \"Count of configurations with ALL filters\", \"[Measures].[Count of configurations with ALL filters]\"}",
                "        }),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Added Items\", each [ip_data.IpConfigurationId] <> null and [ip_data.IpConfigurationId] <> \"\")",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          }
        ]
      },
      {
        "name": "ip_soc_mapping",
        "columns": [
          {
            "name": "ip_soc_mapping.Carbon ProductName",
            "dataType": "string",
            "sourceColumn": "ip_soc_mapping.Carbon ProductName"
          },
          {
            "name": "ip_soc_mapping.Configuration",
            "dataType": "string",
            "sourceColumn": "ip_soc_mapping.Configuration"
          },
          {
            "name": "ip_soc_mapping.Depth",
            "dataType": "string",
            "sourceColumn": "ip_soc_mapping.Depth"
          },
          {
            "name": "ip_soc_mapping.DieID",
            "dataType": "string",
            "sourceColumn": "ip_soc_mapping.DieID"
          },
          {
            "name": "DieName",
            "dataType": "string",
            "sourceColumn": "ip_soc_mapping.DieName"
          },
          {
            "name": "ip_soc_mapping.Drop matrix order",
            "dataType": "string",
            "sourceColumn": "ip_soc_mapping.Drop matrix order"
          },
          {
            "name": "IpConfigurationId",
            "dataType": "string",
            "sourceColumn": "ip_soc_mapping.IpConfigurationId"
          },
          {
            "name": "IpConfigurationId, MilestoneId",
            "dataType": "string",
            "sourceColumn": "ip_soc_mapping.IpConfigurationId, MilestoneId"
          },
          {
            "name": "ip_soc_mapping.Is IPG",
            "dataType": "string",
            "sourceColumn": "ip_soc_mapping.Is IPG"
          },
          {
            "name": "ip_soc_mapping.is related milestone",
            "dataType": "string",
            "sourceColumn": "ip_soc_mapping.is related milestone"
          },
          {
            "name": "ip_soc_mapping.MilestoneId",
            "dataType": "string",
            "sourceColumn": "ip_soc_mapping.MilestoneId"
          },
          {
            "name": "ip_soc_mapping.Related DieName",
            "dataType": "string",
            "sourceColumn": "ip_soc_mapping.Related DieName"
          },
          {
            "type": "calculated",
            "name": "IPFamily_soc_data",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " related(ip_data[ip_data.IPFamily])"
          },
          {
            "type": "calculated",
            "name": "Configuration_soc_data",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "related(ip_data[ip_data.Configuration])"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"AnalysisServices/ipg_iptosoc intel com;ipg_iptosoc\",",
                "    Model1 = Source{[Id=\"Model\"]}[Data],",
                "    Model2 = Model1{[Id=\"Model\"]}[Data],",
                "    #\"Added Items\" = Cube.Transform(Model2,",
                "        {",
                "            {Cube.AddAndExpandDimensionColumn, \"[ip_soc_mapping]\", {\"[ip_soc_mapping].[Carbon ProductName].[Carbon ProductName]\", \"[ip_soc_mapping].[Configuration].[Configuration]\", \"[ip_soc_mapping].[Depth].[Depth]\", \"[ip_soc_mapping].[DieID].[DieID]\", \"[ip_soc_mapping].[DieName].[DieName]\", \"[ip_soc_mapping].[Drop matrix order].[Drop matrix order]\", \"[ip_soc_mapping].[IpConfigurationId].[IpConfigurationId]\", \"[ip_soc_mapping].[IpConfigurationId, MilestoneId].[IpConfigurationId, MilestoneId]\", \"[ip_soc_mapping].[Is IPG].[Is IPG]\", \"[ip_soc_mapping].[is related milestone].[is related milestone]\", \"[ip_soc_mapping].[MilestoneId].[MilestoneId]\", \"[ip_soc_mapping].[Related DieName].[Related DieName]\"}, {\"ip_soc_mapping.Carbon ProductName\", \"ip_soc_mapping.Configuration\", \"ip_soc_mapping.Depth\", \"ip_soc_mapping.DieID\", \"ip_soc_mapping.DieName\", \"ip_soc_mapping.Drop matrix order\", \"ip_soc_mapping.IpConfigurationId\", \"ip_soc_mapping.IpConfigurationId, MilestoneId\", \"ip_soc_mapping.Is IPG\", \"ip_soc_mapping.is related milestone\", \"ip_soc_mapping.MilestoneId\", \"ip_soc_mapping.Related DieName\"}}",
                "        })",
                "in",
                "    #\"Added Items\""
              ]
            }
          }
        ]
      },
      {
        "name": "ip_milestone_data",
        "columns": [
          {
            "name": "ip_milestone_data.1",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.1"
          },
          {
            "name": "ip_milestone_data.999",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.999"
          },
          {
            "name": "ip_milestone_data.Carbon Milestone Link",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.Carbon Milestone Link"
          },
          {
            "name": "ip_milestone_data.Complete",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.Complete"
          },
          {
            "name": "ip_milestone_data.Configuration",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.Configuration"
          },
          {
            "name": "ip_milestone_data.die is mentioned in using releases",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.die is mentioned in using releases"
          },
          {
            "name": "ip_milestone_data.Drop",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.Drop"
          },
          {
            "name": "ip_milestone_data.Drop (Trend)",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.Drop (Trend)"
          },
          {
            "name": "ip_milestone_data.drop case",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.drop case"
          },
          {
            "name": "ip_milestone_data.Drop color",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.Drop color"
          },
          {
            "name": "ip_milestone_data.drop matrix color",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.drop matrix color"
          },
          {
            "name": "ip_milestone_data.drop matrix legend",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.drop matrix legend"
          },
          {
            "name": "ip_milestone_data.drop matrix order",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.drop matrix order"
          },
          {
            "name": "ip_milestone_data.drop matrix value",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.drop matrix value"
          },
          {
            "name": "ip_milestone_data.Drop order",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.Drop order"
          },
          {
            "name": "ip_milestone_data.Drop:Revision:POR",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.Drop:Revision:POR"
          },
          {
            "name": "ip_milestone_data.DropType",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.DropType"
          },
          {
            "name": "ip_milestone_data.dummy_field",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.dummy_field"
          },
          {
            "name": "ip_milestone_data.Future Prevention",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.Future Prevention"
          },
          {
            "name": "ip_milestone_data.Impact",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.Impact"
          },
          {
            "name": "ip_milestone_data.IpConfigurationId",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.IpConfigurationId"
          },
          {
            "name": "IpConfigurationId, MilestoneId",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.IpConfigurationId, MilestoneId"
          },
          {
            "name": "ip_milestone_data.is 1 week late",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.is 1 week late"
          },
          {
            "name": "ip_milestone_data.is 2 or more weeks late",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.is 2 or more weeks late"
          },
          {
            "name": "ip_milestone_data.is complete",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.is complete"
          },
          {
            "name": "ip_milestone_data.is current ww drop",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.is current ww drop"
          },
          {
            "name": "ip_milestone_data.is current ww or future drop",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.is current ww or future drop"
          },
          {
            "name": "ip_milestone_data.is current ww or past drop",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.is current ww or past drop"
          },
          {
            "name": "ip_milestone_data.is drop is in last 6 weeks",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.is drop is in last 6 weeks"
          },
          {
            "name": "ip_milestone_data.is execution drop",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.is execution drop"
          },
          {
            "name": "ip_milestone_data.is future drop",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.is future drop"
          },
          {
            "name": "ip_milestone_data.is future late",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.is future late"
          },
          {
            "name": "ip_milestone_data.is hotfix",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.is hotfix"
          },
          {
            "name": "ip_milestone_data.is late",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.is late"
          },
          {
            "name": "ip_milestone_data.is missing trend",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.is missing trend"
          },
          {
            "name": "ip_milestone_data.is missing trend or por",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.is missing trend or por"
          },
          {
            "name": "ip_milestone_data.is previous ww drop",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.is previous ww drop"
          },
          {
            "name": "ip_milestone_data.is side drop",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.is side drop"
          },
          {
            "name": "ip_milestone_data.is stale",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.is stale"
          },
          {
            "name": "ip_milestone_data.is standard drop",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.is standard drop"
          },
          {
            "name": "ip_milestone_data.is tentative",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.is tentative"
          },
          {
            "name": "ip_milestone_data.Is upcoming drop",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.Is upcoming drop"
          },
          {
            "name": "ip_milestone_data.Late Reason",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.Late Reason"
          },
          {
            "name": "MilestoneId",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.MilestoneId"
          },
          {
            "name": "ip_milestone_data.Mitigation",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.Mitigation"
          },
          {
            "name": "ip_milestone_data.pas filter",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.pas filter"
          },
          {
            "name": "ip_milestone_data.PAS label",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.PAS label"
          },
          {
            "name": "ip_milestone_data.PAS label order",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.PAS label order"
          },
          {
            "name": "ip_milestone_data.PAS legend",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.PAS legend"
          },
          {
            "name": "ip_milestone_data.PAS legend order",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.PAS legend order"
          },
          {
            "name": "ip_milestone_data.PorExactDate",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.PorExactDate"
          },
          {
            "name": "ip_milestone_data.PorMonth",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.PorMonth"
          },
          {
            "name": "ip_milestone_data.PorQuarter",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.PorQuarter"
          },
          {
            "name": "ip_milestone_data.PorYYYYWW",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.PorYYYYWW"
          },
          {
            "name": "ip_milestone_data.Purpose",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.Purpose"
          },
          {
            "name": "ip_milestone_data.ranking_for_completed_drop",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.ranking_for_completed_drop"
          },
          {
            "name": "ip_milestone_data.ranking_for_upcoming_drop",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.ranking_for_upcoming_drop"
          },
          {
            "name": "ip_milestone_data.redrop filter",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.redrop filter"
          },
          {
            "name": "ip_milestone_data.ReDrop legend",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.ReDrop legend"
          },
          {
            "name": "ip_milestone_data.Redrop Reason",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.Redrop Reason"
          },
          {
            "name": "ip_milestone_data.Revision",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.Revision"
          },
          {
            "name": "ip_milestone_data.Standard PROD",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.Standard PROD"
          },
          {
            "name": "ip_milestone_data.std_cell_color",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.std_cell_color"
          },
          {
            "name": "ip_milestone_data.std_cell_legend",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.std_cell_legend"
          },
          {
            "name": "ip_milestone_data.TopLevelModuleName",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.TopLevelModuleName"
          },
          {
            "name": "ip_milestone_data.TopLevelModuleName, MilestoneId",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.TopLevelModuleName, MilestoneId"
          },
          {
            "name": "ip_milestone_data.Trend Offset",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.Trend Offset"
          },
          {
            "name": "ip_milestone_data.TrendChangeReason",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.TrendChangeReason"
          },
          {
            "name": "ip_milestone_data.TrendExactDate",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.TrendExactDate"
          },
          {
            "name": "ip_milestone_data.TrendMonth",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.TrendMonth"
          },
          {
            "name": "ip_milestone_data.TrendQuarter",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.TrendQuarter"
          },
          {
            "name": "ip_milestone_data.TrendYYYYWW",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.TrendYYYYWW"
          },
          {
            "name": "ip_milestone_data.TrendYYYYWW (PorYYYYWW)",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.TrendYYYYWW (PorYYYYWW)"
          },
          {
            "name": "ip_milestone_data.TrendYYYYWW_6WW_back",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.TrendYYYYWW_6WW_back"
          },
          {
            "name": "ip_milestone_data.UsingProducts",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.UsingProducts"
          },
          {
            "name": "ip_milestone_data.UsingProductsSummary",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data.UsingProductsSummary"
          },
          {
            "name": "AGG of Carbon por dates",
            "dataType": "string",
            "sourceColumn": "AGG of Carbon por dates"
          },
          {
            "name": "AGG of Carbon trend dates",
            "dataType": "string",
            "sourceColumn": "AGG of Carbon trend dates"
          },
          {
            "name": "AGG of POLO trend dates",
            "dataType": "string",
            "sourceColumn": "AGG of POLO trend dates"
          },
          {
            "name": "AGG of PROD trend dates",
            "dataType": "string",
            "sourceColumn": "AGG of PROD trend dates"
          },
          {
            "name": "AGG of RTL0P5 trend dates",
            "dataType": "string",
            "sourceColumn": "AGG of RTL0P5 trend dates"
          },
          {
            "name": "AGG of RTL0P8 trend dates",
            "dataType": "string",
            "sourceColumn": "AGG of RTL0P8 trend dates"
          },
          {
            "name": "AGG of RTL1P0 trend dates",
            "dataType": "string",
            "sourceColumn": "AGG of RTL1P0 trend dates"
          },
          {
            "name": "AGG of using releases",
            "dataType": "string",
            "sourceColumn": "AGG of using releases"
          },
          {
            "name": "Count of completed drops",
            "dataType": "int64",
            "sourceColumn": "Count of completed drops"
          },
          {
            "name": "Count of completed late drops",
            "dataType": "int64",
            "sourceColumn": "Count of completed late drops"
          },
          {
            "name": "Count of completed late drops with %",
            "dataType": "string",
            "sourceColumn": "Count of completed late drops with %"
          },
          {
            "name": "Count of completed on time drops",
            "dataType": "int64",
            "sourceColumn": "Count of completed on time drops"
          },
          {
            "name": "Count of completed on time drops with %",
            "dataType": "string",
            "sourceColumn": "Count of completed on time drops with %"
          },
          {
            "name": "Count of drops",
            "dataType": "int64",
            "sourceColumn": "Count of drops"
          },
          {
            "name": "Count of trending 1 wk late drops",
            "dataType": "int64",
            "sourceColumn": "Count of trending 1 wk late drops"
          },
          {
            "name": "Count of trending 2 or more wks late drops",
            "dataType": "int64",
            "sourceColumn": "Count of trending 2 or more wks late drops"
          },
          {
            "name": "Count of trending late drops",
            "dataType": "int64",
            "sourceColumn": "Count of trending late drops"
          },
          {
            "name": "Cumulative drops actual",
            "dataType": "int64",
            "sourceColumn": "Cumulative drops actual"
          },
          {
            "name": "Cumulative drops plan",
            "dataType": "int64",
            "sourceColumn": "Cumulative drops plan"
          },
          {
            "name": "Drop AGG",
            "dataType": "string",
            "sourceColumn": "Drop AGG"
          },
          {
            "name": "Drop:Revision:POR AGG",
            "dataType": "string",
            "sourceColumn": "Drop:Revision:POR AGG"
          },
          {
            "name": "future late",
            "dataType": "int64",
            "sourceColumn": "future late"
          },
          {
            "name": "ie_trend_date",
            "dataType": "int64",
            "sourceColumn": "ie_trend_date"
          },
          {
            "name": "IP3",
            "dataType": "string",
            "sourceColumn": "IP3"
          },
          {
            "name": "is milestone",
            "dataType": "int64",
            "sourceColumn": "is milestone"
          },
          {
            "name": "last_completed_drop_per_configuration",
            "dataType": "string",
            "sourceColumn": "last_completed_drop_per_configuration"
          },
          {
            "name": "milestone_MaxDummy",
            "dataType": "int64",
            "sourceColumn": "milestone_MaxDummy"
          },
          {
            "name": "ops_exec_future_late",
            "dataType": "int64",
            "sourceColumn": "ops_exec_future_late"
          },
          {
            "name": "ops_exec_future_late_COLOR",
            "dataType": "int64",
            "sourceColumn": "ops_exec_future_late_COLOR"
          },
          {
            "name": "ops_exec_future_late_FINAL",
            "dataType": "string",
            "sourceColumn": "ops_exec_future_late_FINAL"
          },
          {
            "name": "ops_exec_future_subip_late",
            "dataType": "int64",
            "sourceColumn": "ops_exec_future_subip_late"
          },
          {
            "name": "ops_exec_future_total",
            "dataType": "int64",
            "sourceColumn": "ops_exec_future_total"
          },
          {
            "name": "ops_exec_is_late",
            "dataType": "int64",
            "sourceColumn": "ops_exec_is_late"
          },
          {
            "name": "ops_exec_late",
            "dataType": "int64",
            "sourceColumn": "ops_exec_late"
          },
          {
            "name": "ops_exec_ontime",
            "dataType": "int64",
            "sourceColumn": "ops_exec_ontime"
          },
          {
            "name": "ops_exec_PAS",
            "dataType": "double",
            "sourceColumn": "ops_exec_PAS"
          },
          {
            "name": "ops_exec_PAS_FINAL",
            "dataType": "string",
            "sourceColumn": "ops_exec_PAS_FINAL"
          },
          {
            "name": "ops_exec_pas_late",
            "dataType": "int64",
            "sourceColumn": "ops_exec_pas_late"
          },
          {
            "name": "ops_exec_pas_ontime",
            "dataType": "int64",
            "sourceColumn": "ops_exec_pas_ontime"
          },
          {
            "name": "ops_exec_pas_total",
            "dataType": "int64",
            "sourceColumn": "ops_exec_pas_total"
          },
          {
            "name": "ops_exec_subip_late",
            "dataType": "int64",
            "sourceColumn": "ops_exec_subip_late"
          },
          {
            "name": "ops_exec_total",
            "dataType": "int64",
            "sourceColumn": "ops_exec_total"
          },
          {
            "name": "PAS",
            "dataType": "double",
            "sourceColumn": "PAS"
          },
          {
            "name": "PAS Target",
            "dataType": "double",
            "sourceColumn": "PAS Target"
          },
          {
            "name": "pas_6ww_avg",
            "dataType": "double",
            "sourceColumn": "pas_6ww_avg"
          },
          {
            "name": "pas_late",
            "dataType": "int64",
            "sourceColumn": "pas_late"
          },
          {
            "name": "pas_ontime",
            "dataType": "int64",
            "sourceColumn": "pas_ontime"
          },
          {
            "name": "pas_ontime_total",
            "dataType": "string",
            "sourceColumn": "pas_ontime_total"
          },
          {
            "name": "pas_total",
            "dataType": "int64",
            "sourceColumn": "pas_total"
          },
          {
            "name": "POLO",
            "dataType": "string",
            "sourceColumn": "POLO"
          },
          {
            "name": "PROD",
            "dataType": "string",
            "sourceColumn": "PROD"
          },
          {
            "name": "ReDrop",
            "dataType": "double",
            "sourceColumn": "ReDrop"
          },
          {
            "name": "ReDrop Target",
            "dataType": "double",
            "sourceColumn": "ReDrop Target"
          },
          {
            "name": "redrop_/_notredrop",
            "dataType": "string",
            "sourceColumn": "redrop_/_notredrop"
          },
          {
            "name": "redrop_/_total",
            "dataType": "string",
            "sourceColumn": "redrop_/_total"
          },
          {
            "name": "redrop_6ww_avg",
            "dataType": "double",
            "sourceColumn": "redrop_6ww_avg"
          },
          {
            "name": "redrop_is_redrop",
            "dataType": "int64",
            "sourceColumn": "redrop_is_redrop"
          },
          {
            "name": "redrop_not_redrop",
            "dataType": "int64",
            "sourceColumn": "redrop_not_redrop"
          },
          {
            "name": "redrop_total",
            "dataType": "int64",
            "sourceColumn": "redrop_total"
          },
          {
            "name": "RTL0P5",
            "dataType": "string",
            "sourceColumn": "RTL0P5"
          },
          {
            "name": "RTL0P8",
            "dataType": "string",
            "sourceColumn": "RTL0P8"
          },
          {
            "name": "RTL1P0",
            "dataType": "string",
            "sourceColumn": "RTL1P0"
          },
          {
            "name": "schedule_summary",
            "dataType": "int64",
            "sourceColumn": "schedule_summary"
          },
          {
            "name": "stale drops",
            "dataType": "int64",
            "sourceColumn": "stale drops"
          },
          {
            "name": "std_cells_color_coding",
            "dataType": "int64",
            "sourceColumn": "std_cells_color_coding"
          },
          {
            "name": "trending_late_summary",
            "dataType": "int64",
            "sourceColumn": "trending_late_summary"
          },
          {
            "name": "upcoming_drop_per_configuration",
            "dataType": "string",
            "sourceColumn": "upcoming_drop_per_configuration"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"AnalysisServices/ipg_iptosoc intel com;ipg_iptosoc\",",
                "    Model1 = Source{[Id=\"Model\"]}[Data],",
                "    Model2 = Model1{[Id=\"Model\"]}[Data],",
                "    #\"Added Items\" = Cube.Transform(Model2,",
                "        {",
                "            {Cube.AddAndExpandDimensionColumn, \"[ip_milestone_data]\", {\"[ip_milestone_data].[1].[1]\", \"[ip_milestone_data].[999].[999]\", \"[ip_milestone_data].[Carbon Milestone Link].[Carbon Milestone Link]\", \"[ip_milestone_data].[Complete].[Complete]\", \"[ip_milestone_data].[Configuration].[Configuration]\", \"[ip_milestone_data].[die is mentioned in using releases].[die is mentioned in using releases]\", \"[ip_milestone_data].[Drop].[Drop]\", \"[ip_milestone_data].[Drop (Trend)].[Drop (Trend)]\", \"[ip_milestone_data].[drop case].[drop case]\", \"[ip_milestone_data].[Drop color].[Drop color]\", \"[ip_milestone_data].[drop matrix color].[drop matrix color]\", \"[ip_milestone_data].[drop matrix legend].[drop matrix legend]\", \"[ip_milestone_data].[drop matrix order].[drop matrix order]\", \"[ip_milestone_data].[drop matrix value].[drop matrix value]\", \"[ip_milestone_data].[Drop order].[Drop order]\", \"[ip_milestone_data].[Drop:Revision:POR].[Drop:Revision:POR]\", \"[ip_milestone_data].[DropType].[DropType]\", \"[ip_milestone_data].[dummy_field].[dummy_field]\", \"[ip_milestone_data].[Future Prevention].[Future Prevention]\", \"[ip_milestone_data].[Impact].[Impact]\", \"[ip_milestone_data].[IpConfigurationId].[IpConfigurationId]\", \"[ip_milestone_data].[IpConfigurationId, MilestoneId].[IpConfigurationId, MilestoneId]\", \"[ip_milestone_data].[is 1 week late].[is 1 week late]\", \"[ip_milestone_data].[is 2 or more weeks late].[is 2 or more weeks late]\", \"[ip_milestone_data].[is complete].[is complete]\", \"[ip_milestone_data].[is current ww drop].[is current ww drop]\", \"[ip_milestone_data].[is current ww or future drop].[is current ww or future drop]\", \"[ip_milestone_data].[is current ww or past drop].[is current ww or past drop]\", \"[ip_milestone_data].[is drop is in last 6 weeks].[is drop is in last 6 weeks]\", \"[ip_milestone_data].[is execution drop].[is execution drop]\", \"[ip_milestone_data].[is future drop].[is future drop]\", \"[ip_milestone_data].[is future late].[is future late]\", \"[ip_milestone_data].[is hotfix].[is hotfix]\", \"[ip_milestone_data].[is late].[is late]\", \"[ip_milestone_data].[is missing trend].[is missing trend]\", \"[ip_milestone_data].[is missing trend or por].[is missing trend or por]\", \"[ip_milestone_data].[is previous ww drop].[is previous ww drop]\", \"[ip_milestone_data].[is side drop].[is side drop]\", \"[ip_milestone_data].[is stale].[is stale]\", \"[ip_milestone_data].[is standard drop].[is standard drop]\", \"[ip_milestone_data].[is tentative].[is tentative]\", \"[ip_milestone_data].[Is upcoming drop].[Is upcoming drop]\", \"[ip_milestone_data].[Late Reason].[Late Reason]\", \"[ip_milestone_data].[MilestoneId].[MilestoneId]\", \"[ip_milestone_data].[Mitigation].[Mitigation]\", \"[ip_milestone_data].[pas filter].[pas filter]\", \"[ip_milestone_data].[PAS label].[PAS label]\", \"[ip_milestone_data].[PAS label order].[PAS label order]\", \"[ip_milestone_data].[PAS legend].[PAS legend]\", \"[ip_milestone_data].[PAS legend order].[PAS legend order]\", \"[ip_milestone_data].[PorExactDate].[PorExactDate]\", \"[ip_milestone_data].[PorMonth].[PorMonth]\", \"[ip_milestone_data].[PorQuarter].[PorQuarter]\", \"[ip_milestone_data].[PorYYYYWW].[PorYYYYWW]\", \"[ip_milestone_data].[Purpose].[Purpose]\", \"[ip_milestone_data].[ranking_for_completed_drop].[ranking_for_completed_drop]\", \"[ip_milestone_data].[ranking_for_upcoming_drop].[ranking_for_upcoming_drop]\", \"[ip_milestone_data].[redrop filter].[redrop filter]\", \"[ip_milestone_data].[ReDrop legend].[ReDrop legend]\", \"[ip_milestone_data].[Redrop Reason].[Redrop Reason]\", \"[ip_milestone_data].[Revision].[Revision]\", \"[ip_milestone_data].[Standard PROD].[Standard PROD]\", \"[ip_milestone_data].[std_cell_color].[std_cell_color]\", \"[ip_milestone_data].[std_cell_legend].[std_cell_legend]\", \"[ip_milestone_data].[TopLevelModuleName].[TopLevelModuleName]\", \"[ip_milestone_data].[TopLevelModuleName, MilestoneId].[TopLevelModuleName, MilestoneId]\", \"[ip_milestone_data].[Trend Offset].[Trend Offset]\", \"[ip_milestone_data].[TrendChangeReason].[TrendChangeReason]\", \"[ip_milestone_data].[TrendExactDate].[TrendExactDate]\", \"[ip_milestone_data].[TrendMonth].[TrendMonth]\", \"[ip_milestone_data].[TrendQuarter].[TrendQuarter]\", \"[ip_milestone_data].[TrendYYYYWW].[TrendYYYYWW]\", \"[ip_milestone_data].[TrendYYYYWW (PorYYYYWW)].[TrendYYYYWW (PorYYYYWW)]\", \"[ip_milestone_data].[TrendYYYYWW_6WW_back].[TrendYYYYWW_6WW_back]\", \"[ip_milestone_data].[UsingProducts].[UsingProducts]\", \"[ip_milestone_data].[UsingProductsSummary].[UsingProductsSummary]\"}, {\"ip_milestone_data.1\", \"ip_milestone_data.999\", \"ip_milestone_data.Carbon Milestone Link\", \"ip_milestone_data.Complete\", \"ip_milestone_data.Configuration\", \"ip_milestone_data.die is mentioned in using releases\", \"ip_milestone_data.Drop\", \"ip_milestone_data.Drop (Trend)\", \"ip_milestone_data.drop case\", \"ip_milestone_data.Drop color\", \"ip_milestone_data.drop matrix color\", \"ip_milestone_data.drop matrix legend\", \"ip_milestone_data.drop matrix order\", \"ip_milestone_data.drop matrix value\", \"ip_milestone_data.Drop order\", \"ip_milestone_data.Drop:Revision:POR\", \"ip_milestone_data.DropType\", \"ip_milestone_data.dummy_field\", \"ip_milestone_data.Future Prevention\", \"ip_milestone_data.Impact\", \"ip_milestone_data.IpConfigurationId\", \"ip_milestone_data.IpConfigurationId, MilestoneId\", \"ip_milestone_data.is 1 week late\", \"ip_milestone_data.is 2 or more weeks late\", \"ip_milestone_data.is complete\", \"ip_milestone_data.is current ww drop\", \"ip_milestone_data.is current ww or future drop\", \"ip_milestone_data.is current ww or past drop\", \"ip_milestone_data.is drop is in last 6 weeks\", \"ip_milestone_data.is execution drop\", \"ip_milestone_data.is future drop\", \"ip_milestone_data.is future late\", \"ip_milestone_data.is hotfix\", \"ip_milestone_data.is late\", \"ip_milestone_data.is missing trend\", \"ip_milestone_data.is missing trend or por\", \"ip_milestone_data.is previous ww drop\", \"ip_milestone_data.is side drop\", \"ip_milestone_data.is stale\", \"ip_milestone_data.is standard drop\", \"ip_milestone_data.is tentative\", \"ip_milestone_data.Is upcoming drop\", \"ip_milestone_data.Late Reason\", \"ip_milestone_data.MilestoneId\", \"ip_milestone_data.Mitigation\", \"ip_milestone_data.pas filter\", \"ip_milestone_data.PAS label\", \"ip_milestone_data.PAS label order\", \"ip_milestone_data.PAS legend\", \"ip_milestone_data.PAS legend order\", \"ip_milestone_data.PorExactDate\", \"ip_milestone_data.PorMonth\", \"ip_milestone_data.PorQuarter\", \"ip_milestone_data.PorYYYYWW\", \"ip_milestone_data.Purpose\", \"ip_milestone_data.ranking_for_completed_drop\", \"ip_milestone_data.ranking_for_upcoming_drop\", \"ip_milestone_data.redrop filter\", \"ip_milestone_data.ReDrop legend\", \"ip_milestone_data.Redrop Reason\", \"ip_milestone_data.Revision\", \"ip_milestone_data.Standard PROD\", \"ip_milestone_data.std_cell_color\", \"ip_milestone_data.std_cell_legend\", \"ip_milestone_data.TopLevelModuleName\", \"ip_milestone_data.TopLevelModuleName, MilestoneId\", \"ip_milestone_data.Trend Offset\", \"ip_milestone_data.TrendChangeReason\", \"ip_milestone_data.TrendExactDate\", \"ip_milestone_data.TrendMonth\", \"ip_milestone_data.TrendQuarter\", \"ip_milestone_data.TrendYYYYWW\", \"ip_milestone_data.TrendYYYYWW (PorYYYYWW)\", \"ip_milestone_data.TrendYYYYWW_6WW_back\", \"ip_milestone_data.UsingProducts\", \"ip_milestone_data.UsingProductsSummary\"}},",
                "            {Cube.AddMeasureColumn, \"AGG of Carbon por dates\", \"[Measures].[AGG of Carbon por dates]\"},",
                "            {Cube.AddMeasureColumn, \"AGG of Carbon trend dates\", \"[Measures].[AGG of Carbon trend dates]\"},",
                "            {Cube.AddMeasureColumn, \"AGG of POLO trend dates\", \"[Measures].[AGG of POLO trend dates]\"},",
                "            {Cube.AddMeasureColumn, \"AGG of PROD trend dates\", \"[Measures].[AGG of PROD trend dates]\"},",
                "            {Cube.AddMeasureColumn, \"AGG of RTL0P5 trend dates\", \"[Measures].[AGG of RTL0P5 trend dates]\"},",
                "            {Cube.AddMeasureColumn, \"AGG of RTL0P8 trend dates\", \"[Measures].[AGG of RTL0P8 trend dates]\"},",
                "            {Cube.AddMeasureColumn, \"AGG of RTL1P0 trend dates\", \"[Measures].[AGG of RTL1P0 trend dates]\"},",
                "            {Cube.AddMeasureColumn, \"AGG of using releases\", \"[Measures].[AGG of using releases]\"},",
                "            {Cube.AddMeasureColumn, \"Count of completed drops\", \"[Measures].[Count of completed drops]\"},",
                "            {Cube.AddMeasureColumn, \"Count of completed late drops\", \"[Measures].[Count of completed late drops]\"},",
                "            {Cube.AddMeasureColumn, \"Count of completed late drops with %\", \"[Measures].[Count of completed late drops with %]\"},",
                "            {Cube.AddMeasureColumn, \"Count of completed on time drops\", \"[Measures].[Count of completed on time drops]\"},",
                "            {Cube.AddMeasureColumn, \"Count of completed on time drops with %\", \"[Measures].[Count of completed on time drops with %]\"},",
                "            {Cube.AddMeasureColumn, \"Count of drops\", \"[Measures].[Count of drops]\"},",
                "            {Cube.AddMeasureColumn, \"Count of trending 1 wk late drops\", \"[Measures].[Count of trending 1 wk late drops]\"},",
                "            {Cube.AddMeasureColumn, \"Count of trending 2 or more wks late drops\", \"[Measures].[Count of trending 2 or more wks late drops]\"},",
                "            {Cube.AddMeasureColumn, \"Count of trending late drops\", \"[Measures].[Count of trending late drops]\"},",
                "            {Cube.AddMeasureColumn, \"Cumulative drops actual\", \"[Measures].[Cumulative drops actual]\"},",
                "            {Cube.AddMeasureColumn, \"Cumulative drops plan\", \"[Measures].[Cumulative drops plan]\"},",
                "            {Cube.AddMeasureColumn, \"Drop AGG\", \"[Measures].[Drop AGG]\"},",
                "            {Cube.AddMeasureColumn, \"Drop:Revision:POR AGG\", \"[Measures].[Drop:Revision:POR AGG]\"},",
                "            {Cube.AddMeasureColumn, \"future late\", \"[Measures].[future late]\"},",
                "            {Cube.AddMeasureColumn, \"ie_trend_date\", \"[Measures].[ie_trend_date]\"},",
                "            {Cube.AddMeasureColumn, \"IP3\", \"[Measures].[IP3]\"},",
                "            {Cube.AddMeasureColumn, \"is milestone\", \"[Measures].[is milestone]\"},",
                "            {Cube.AddMeasureColumn, \"last_completed_drop_per_configuration\", \"[Measures].[last_completed_drop_per_configuration]\"},",
                "            {Cube.AddMeasureColumn, \"milestone_MaxDummy\", \"[Measures].[milestone_MaxDummy]\"},",
                "            {Cube.AddMeasureColumn, \"ops_exec_future_late\", \"[Measures].[ops_exec_future_late]\"},",
                "            {Cube.AddMeasureColumn, \"ops_exec_future_late_COLOR\", \"[Measures].[ops_exec_future_late_COLOR]\"},",
                "            {Cube.AddMeasureColumn, \"ops_exec_future_late_FINAL\", \"[Measures].[ops_exec_future_late_FINAL]\"},",
                "            {Cube.AddMeasureColumn, \"ops_exec_future_subip_late\", \"[Measures].[ops_exec_future_subip_late]\"},",
                "            {Cube.AddMeasureColumn, \"ops_exec_future_total\", \"[Measures].[ops_exec_future_total]\"},",
                "            {Cube.AddMeasureColumn, \"ops_exec_is_late\", \"[Measures].[ops_exec_is_late]\"},",
                "            {Cube.AddMeasureColumn, \"ops_exec_late\", \"[Measures].[ops_exec_late]\"},",
                "            {Cube.AddMeasureColumn, \"ops_exec_ontime\", \"[Measures].[ops_exec_ontime]\"},",
                "            {Cube.AddMeasureColumn, \"ops_exec_PAS\", \"[Measures].[ops_exec_PAS]\"},",
                "            {Cube.AddMeasureColumn, \"ops_exec_PAS_FINAL\", \"[Measures].[ops_exec_PAS_FINAL]\"},",
                "            {Cube.AddMeasureColumn, \"ops_exec_pas_late\", \"[Measures].[ops_exec_pas_late]\"},",
                "            {Cube.AddMeasureColumn, \"ops_exec_pas_ontime\", \"[Measures].[ops_exec_pas_ontime]\"},",
                "            {Cube.AddMeasureColumn, \"ops_exec_pas_total\", \"[Measures].[ops_exec_pas_total]\"},",
                "            {Cube.AddMeasureColumn, \"ops_exec_subip_late\", \"[Measures].[ops_exec_subip_late]\"},",
                "            {Cube.AddMeasureColumn, \"ops_exec_total\", \"[Measures].[ops_exec_total]\"},",
                "            {Cube.AddMeasureColumn, \"PAS\", \"[Measures].[PAS]\"},",
                "            {Cube.AddMeasureColumn, \"PAS Target\", \"[Measures].[PAS Target]\"},",
                "            {Cube.AddMeasureColumn, \"pas_6ww_avg\", \"[Measures].[pas_6ww_avg]\"},",
                "            {Cube.AddMeasureColumn, \"pas_late\", \"[Measures].[pas_late]\"},",
                "            {Cube.AddMeasureColumn, \"pas_ontime\", \"[Measures].[pas_ontime]\"},",
                "            {Cube.AddMeasureColumn, \"pas_ontime_total\", \"[Measures].[pas_ontime_total]\"},",
                "            {Cube.AddMeasureColumn, \"pas_total\", \"[Measures].[pas_total]\"},",
                "            {Cube.AddMeasureColumn, \"POLO\", \"[Measures].[POLO]\"},",
                "            {Cube.AddMeasureColumn, \"PROD\", \"[Measures].[PROD]\"},",
                "            {Cube.AddMeasureColumn, \"ReDrop\", \"[Measures].[ReDrop]\"},",
                "            {Cube.AddMeasureColumn, \"ReDrop Target\", \"[Measures].[ReDrop Target]\"},",
                "            {Cube.AddMeasureColumn, \"redrop_/_notredrop\", \"[Measures].[redrop_/_notredrop]\"},",
                "            {Cube.AddMeasureColumn, \"redrop_/_total\", \"[Measures].[redrop_/_total]\"},",
                "            {Cube.AddMeasureColumn, \"redrop_6ww_avg\", \"[Measures].[redrop_6ww_avg]\"},",
                "            {Cube.AddMeasureColumn, \"redrop_is_redrop\", \"[Measures].[redrop_is_redrop]\"},",
                "            {Cube.AddMeasureColumn, \"redrop_not_redrop\", \"[Measures].[redrop_not_redrop]\"},",
                "            {Cube.AddMeasureColumn, \"redrop_total\", \"[Measures].[redrop_total]\"},",
                "            {Cube.AddMeasureColumn, \"RTL0P5\", \"[Measures].[RTL0P5]\"},",
                "            {Cube.AddMeasureColumn, \"RTL0P8\", \"[Measures].[RTL0P8]\"},",
                "            {Cube.AddMeasureColumn, \"RTL1P0\", \"[Measures].[RTL1P0]\"},",
                "            {Cube.AddMeasureColumn, \"schedule_summary\", \"[Measures].[schedule_summary]\"},",
                "            {Cube.AddMeasureColumn, \"stale drops\", \"[Measures].[stale drops]\"},",
                "            {Cube.AddMeasureColumn, \"std_cells_color_coding\", \"[Measures].[std_cells_color_coding]\"},",
                "            {Cube.AddMeasureColumn, \"trending_late_summary\", \"[Measures].[trending_late_summary]\"},",
                "            {Cube.AddMeasureColumn, \"upcoming_drop_per_configuration\", \"[Measures].[upcoming_drop_per_configuration]\"}",
                "        }),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Added Items\", each [#\"ip_milestone_data.IpConfigurationId, MilestoneId\"] <> null and [#\"ip_milestone_data.IpConfigurationId, MilestoneId\"] <> \"\")",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          }
        ]
      },
      {
        "name": "ip_milestone_data_with_dates",
        "columns": [
          {
            "name": "ip_milestone_data_with_dates.carbon_milestone_link",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.carbon_milestone_link"
          },
          {
            "name": "ip_milestone_data_with_dates.Complete",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.Complete"
          },
          {
            "name": "ip_milestone_data_with_dates.Configuration",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.Configuration"
          },
          {
            "name": "ip_milestone_data_with_dates.current WW",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.current WW"
          },
          {
            "name": "ip_milestone_data_with_dates.Delta view color",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.Delta view color"
          },
          {
            "name": "ip_milestone_data_with_dates.Drop",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.Drop"
          },
          {
            "name": "ip_milestone_data_with_dates.drop case",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.drop case"
          },
          {
            "name": "ip_milestone_data_with_dates.Drop color",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.Drop color"
          },
          {
            "name": "ip_milestone_data_with_dates.Drop color with current ww",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.Drop color with current ww"
          },
          {
            "name": "ip_milestone_data_with_dates.Drop label",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.Drop label"
          },
          {
            "name": "ip_milestone_data_with_dates.drop matrix order",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.drop matrix order"
          },
          {
            "name": "ip_milestone_data_with_dates.Drop order",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.Drop order"
          },
          {
            "name": "ip_milestone_data_with_dates.Drop with space",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.Drop with space"
          },
          {
            "name": "ip_milestone_data_with_dates.drop_details_color_code",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.drop_details_color_code"
          },
          {
            "name": "ip_milestone_data_with_dates.DropType",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.DropType"
          },
          {
            "name": "ip_milestone_data_with_dates.IpConfigurationId",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.IpConfigurationId"
          },
          {
            "name": "ip_milestone_data_with_dates.IpConfigurationId, MilestoneId",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.IpConfigurationId, MilestoneId"
          },
          {
            "name": "ip_milestone_data_with_dates.IpConfigurationId, ww",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.IpConfigurationId, ww"
          },
          {
            "name": "ip_milestone_data_with_dates.is 1 week late",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.is 1 week late"
          },
          {
            "name": "ip_milestone_data_with_dates.is 2 or more weeks late",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.is 2 or more weeks late"
          },
          {
            "name": "ip_milestone_data_with_dates.is complete",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.is complete"
          },
          {
            "name": "ip_milestone_data_with_dates.is current WW",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.is current WW"
          },
          {
            "name": "ip_milestone_data_with_dates.is future drop",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.is future drop"
          },
          {
            "name": "ip_milestone_data_with_dates.Is gap milestone",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.Is gap milestone"
          },
          {
            "name": "ip_milestone_data_with_dates.is late",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.is late"
          },
          {
            "name": "ip_milestone_data_with_dates.is missing trend or por",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.is missing trend or por"
          },
          {
            "name": "ip_milestone_data_with_dates.is relevant ww",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.is relevant ww"
          },
          {
            "name": "ip_milestone_data_with_dates.is stale",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.is stale"
          },
          {
            "name": "ip_milestone_data_with_dates.is standard drop",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.is standard drop"
          },
          {
            "name": "ip_milestone_data_with_dates.is ww of drop",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.is ww of drop"
          },
          {
            "name": "ip_milestone_data_with_dates.late_legend",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.late_legend"
          },
          {
            "name": "ip_milestone_data_with_dates.late_legend_int",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.late_legend_int"
          },
          {
            "name": "ip_milestone_data_with_dates.LeadProduct",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.LeadProduct"
          },
          {
            "name": "MilestoneId",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.MilestoneId"
          },
          {
            "name": "ip_milestone_data_with_dates.Month",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.Month"
          },
          {
            "name": "ip_milestone_data_with_dates.PorExactDate",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.PorExactDate"
          },
          {
            "name": "ip_milestone_data_with_dates.PorYYYYWW",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.PorYYYYWW"
          },
          {
            "name": "ip_milestone_data_with_dates.project_view_drop_legend",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.project_view_drop_legend"
          },
          {
            "name": "ip_milestone_data_with_dates.Quarter",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.Quarter"
          },
          {
            "name": "ip_milestone_data_with_dates.Reuse",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.Reuse"
          },
          {
            "name": "ip_milestone_data_with_dates.Revision",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.Revision"
          },
          {
            "name": "ip_milestone_data_with_dates.Stale?",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.Stale?"
          },
          {
            "name": "ip_milestone_data_with_dates.Trend Offset",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.Trend Offset"
          },
          {
            "name": "ip_milestone_data_with_dates.TrendExactDate",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.TrendExactDate"
          },
          {
            "name": "ip_milestone_data_with_dates.TrendYYYYWW",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.TrendYYYYWW"
          },
          {
            "name": "ip_milestone_data_with_dates.TrendYYYYWW (PorYYYYWW)",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.TrendYYYYWW (PorYYYYWW)"
          },
          {
            "name": "ip_milestone_data_with_dates.UsingProducts",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.UsingProducts"
          },
          {
            "name": "ip_milestone_data_with_dates.UsingProductsSummary",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.UsingProductsSummary"
          },
          {
            "name": "ip_milestone_data_with_dates.WW",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.WW"
          },
          {
            "name": "ip_milestone_data_with_dates.WW start date",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.WW start date"
          },
          {
            "name": "ip_milestone_data_with_dates.Year",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.Year"
          },
          {
            "name": "ip_milestone_data_with_dates.YearQuarter",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.YearQuarter"
          },
          {
            "name": "ip_milestone_data_with_dates.YY'WW",
            "dataType": "string",
            "sourceColumn": "ip_milestone_data_with_dates.YY'WW"
          },
          {
            "name": "First no blank drop",
            "dataType": "string",
            "sourceColumn": "First no blank drop"
          },
          {
            "name": "First no blank drop color",
            "dataType": "string",
            "sourceColumn": "First no blank drop color"
          },
          {
            "name": "First no blank is late",
            "dataType": "int64",
            "sourceColumn": "First no blank is late"
          },
          {
            "name": "Cumulative plan",
            "dataType": "int64",
            "sourceColumn": "Cumulative plan"
          },
          {
            "name": "Cumulative actual",
            "dataType": "int64",
            "sourceColumn": "Cumulative actual"
          },
          {
            "name": "Cumulative actual RTL0P5",
            "dataType": "int64",
            "sourceColumn": "Cumulative actual RTL0P5"
          },
          {
            "name": "Cumulative actual RTL0P8",
            "dataType": "int64",
            "sourceColumn": "Cumulative actual RTL0P8"
          },
          {
            "name": "Cumulative actual RTL1P0",
            "dataType": "int64",
            "sourceColumn": "Cumulative actual RTL1P0"
          },
          {
            "name": "Cumulative actual POLO",
            "dataType": "int64",
            "sourceColumn": "Cumulative actual POLO"
          },
          {
            "name": "Cumulative actual PROD",
            "dataType": "int64",
            "sourceColumn": "Cumulative actual PROD"
          },
          {
            "name": "Cumulative plan RTL0P5",
            "dataType": "int64",
            "sourceColumn": "Cumulative plan RTL0P5"
          },
          {
            "name": "Cumulative plan RTL0P8",
            "dataType": "int64",
            "sourceColumn": "Cumulative plan RTL0P8"
          },
          {
            "name": "Cumulative plan RTL1P0",
            "dataType": "int64",
            "sourceColumn": "Cumulative plan RTL1P0"
          },
          {
            "name": "Cumulative plan POLO",
            "dataType": "int64",
            "sourceColumn": "Cumulative plan POLO"
          },
          {
            "name": "Cumulative plan PROD",
            "dataType": "int64",
            "sourceColumn": "Cumulative plan PROD"
          },
          {
            "name": "First no blank drop color with current ww color",
            "dataType": "string",
            "sourceColumn": "First no blank drop color with current ww color"
          },
          {
            "name": "First no blank drop with current ww",
            "dataType": "string",
            "sourceColumn": "First no blank drop with current ww"
          },
          {
            "name": "current ww value",
            "dataType": "string",
            "sourceColumn": "current ww value"
          },
          {
            "name": "Trend AGG NewLine",
            "dataType": "string",
            "sourceColumn": "Trend AGG NewLine"
          },
          {
            "name": "POR AGG NewLine",
            "dataType": "string",
            "sourceColumn": "POR AGG NewLine"
          },
          {
            "name": "Trend Offset AGG NewLine",
            "dataType": "string",
            "sourceColumn": "Trend Offset AGG NewLine"
          },
          {
            "name": "Count of milestones",
            "dataType": "int64",
            "sourceColumn": "Count of milestones"
          },
          {
            "name": "Count of milestones - ignore drop column",
            "dataType": "int64",
            "sourceColumn": "Count of milestones - ignore drop column"
          },
          {
            "name": "Count of drops with_dates",
            "dataType": "int64",
            "sourceColumn": "Count of drops with_dates"
          },
          {
            "name": "Count of completed drops with_dates",
            "dataType": "int64",
            "sourceColumn": "Count of completed drops with_dates"
          },
          {
            "name": "Count of completed on time drops with_dates",
            "dataType": "int64",
            "sourceColumn": "Count of completed on time drops with_dates"
          },
          {
            "name": "Count of completed late drops with_dates",
            "dataType": "int64",
            "sourceColumn": "Count of completed late drops with_dates"
          },
          {
            "name": "Count of completed late drops with % with_dates",
            "dataType": "string",
            "sourceColumn": "Count of completed late drops with % with_dates"
          },
          {
            "name": "Count of completed on time drops with % with_dates",
            "dataType": "string",
            "sourceColumn": "Count of completed on time drops with % with_dates"
          },
          {
            "name": "Count of completed 1 week late drops with_dates",
            "dataType": "int64",
            "sourceColumn": "Count of completed 1 week late drops with_dates"
          },
          {
            "name": "Count of completed 1 week late drops with % with_dates",
            "dataType": "string",
            "sourceColumn": "Count of completed 1 week late drops with % with_dates"
          },
          {
            "name": "Count of completed missing trend or por drops with_dates",
            "dataType": "int64",
            "sourceColumn": "Count of completed missing trend or por drops with_dates"
          },
          {
            "name": "Count of completed missing trend or por drops with % with_dates",
            "dataType": "string",
            "sourceColumn": "Count of completed missing trend or por drops with % with_dates"
          },
          {
            "name": "complete_legend",
            "dataType": "int64",
            "sourceColumn": "complete_legend"
          },
          {
            "name": "First no blank is complete",
            "dataType": "int64",
            "sourceColumn": "First no blank is complete"
          },
          {
            "type": "calculated",
            "name": "IsLate",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "IF(value(ip_milestone_data_with_dates[Trend Offset AGG NewLine])<0, 1, 0)"
          },
          {
            "name": "POR AGG NewLine_num",
            "dataType": "int64",
            "sourceColumn": "POR AGG NewLine_num"
          },
          {
            "name": "Trend AGG NewLine_num",
            "dataType": "int64",
            "sourceColumn": "Trend AGG NewLine_num"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"AnalysisServices/ipg_iptosoc intel com;ipg_iptosoc\",",
                "    Model1 = Source{[Id=\"Model\"]}[Data],",
                "    Model2 = Model1{[Id=\"Model\"]}[Data],",
                "    #\"Added Items\" = Cube.Transform(Model2,",
                "        {",
                "            {Cube.AddAndExpandDimensionColumn, \"[ip_milestone_data_with_dates]\", {\"[ip_milestone_data_with_dates].[carbon_milestone_link].[carbon_milestone_link]\", \"[ip_milestone_data_with_dates].[Complete].[Complete]\", \"[ip_milestone_data_with_dates].[Configuration].[Configuration]\", \"[ip_milestone_data_with_dates].[current WW].[current WW]\", \"[ip_milestone_data_with_dates].[Delta view color].[Delta view color]\", \"[ip_milestone_data_with_dates].[Drop].[Drop]\", \"[ip_milestone_data_with_dates].[drop case].[drop case]\", \"[ip_milestone_data_with_dates].[Drop color].[Drop color]\", \"[ip_milestone_data_with_dates].[Drop color with current ww].[Drop color with current ww]\", \"[ip_milestone_data_with_dates].[Drop label].[Drop label]\", \"[ip_milestone_data_with_dates].[drop matrix order].[drop matrix order]\", \"[ip_milestone_data_with_dates].[Drop order].[Drop order]\", \"[ip_milestone_data_with_dates].[Drop with space].[Drop with space]\", \"[ip_milestone_data_with_dates].[drop_details_color_code].[drop_details_color_code]\", \"[ip_milestone_data_with_dates].[DropType].[DropType]\", \"[ip_milestone_data_with_dates].[IpConfigurationId].[IpConfigurationId]\", \"[ip_milestone_data_with_dates].[IpConfigurationId, MilestoneId].[IpConfigurationId, MilestoneId]\", \"[ip_milestone_data_with_dates].[IpConfigurationId, ww].[IpConfigurationId, ww]\", \"[ip_milestone_data_with_dates].[is 1 week late].[is 1 week late]\", \"[ip_milestone_data_with_dates].[is 2 or more weeks late].[is 2 or more weeks late]\", \"[ip_milestone_data_with_dates].[is complete].[is complete]\", \"[ip_milestone_data_with_dates].[is current WW].[is current WW]\", \"[ip_milestone_data_with_dates].[is future drop].[is future drop]\", \"[ip_milestone_data_with_dates].[Is gap milestone].[Is gap milestone]\", \"[ip_milestone_data_with_dates].[is late].[is late]\", \"[ip_milestone_data_with_dates].[is missing trend or por].[is missing trend or por]\", \"[ip_milestone_data_with_dates].[is relevant ww].[is relevant ww]\", \"[ip_milestone_data_with_dates].[is stale].[is stale]\", \"[ip_milestone_data_with_dates].[is standard drop].[is standard drop]\", \"[ip_milestone_data_with_dates].[is ww of drop].[is ww of drop]\", \"[ip_milestone_data_with_dates].[late_legend].[late_legend]\", \"[ip_milestone_data_with_dates].[late_legend_int].[late_legend_int]\", \"[ip_milestone_data_with_dates].[LeadProduct].[LeadProduct]\", \"[ip_milestone_data_with_dates].[MilestoneId].[MilestoneId]\", \"[ip_milestone_data_with_dates].[Month].[Month]\", \"[ip_milestone_data_with_dates].[PorExactDate].[PorExactDate]\", \"[ip_milestone_data_with_dates].[PorYYYYWW].[PorYYYYWW]\", \"[ip_milestone_data_with_dates].[project_view_drop_legend].[project_view_drop_legend]\", \"[ip_milestone_data_with_dates].[Quarter].[Quarter]\", \"[ip_milestone_data_with_dates].[Reuse].[Reuse]\", \"[ip_milestone_data_with_dates].[Revision].[Revision]\", \"[ip_milestone_data_with_dates].[Stale?].[Stale?]\", \"[ip_milestone_data_with_dates].[Trend Offset].[Trend Offset]\", \"[ip_milestone_data_with_dates].[TrendExactDate].[TrendExactDate]\", \"[ip_milestone_data_with_dates].[TrendYYYYWW].[TrendYYYYWW]\", \"[ip_milestone_data_with_dates].[TrendYYYYWW (PorYYYYWW)].[TrendYYYYWW (PorYYYYWW)]\", \"[ip_milestone_data_with_dates].[UsingProducts].[UsingProducts]\", \"[ip_milestone_data_with_dates].[UsingProductsSummary].[UsingProductsSummary]\", \"[ip_milestone_data_with_dates].[WW].[WW]\", \"[ip_milestone_data_with_dates].[WW start date].[WW start date]\", \"[ip_milestone_data_with_dates].[Year].[Year]\", \"[ip_milestone_data_with_dates].[YearQuarter].[YearQuarter]\", \"[ip_milestone_data_with_dates].[YY'WW].[YY'WW]\"}, {\"ip_milestone_data_with_dates.carbon_milestone_link\", \"ip_milestone_data_with_dates.Complete\", \"ip_milestone_data_with_dates.Configuration\", \"ip_milestone_data_with_dates.current WW\", \"ip_milestone_data_with_dates.Delta view color\", \"ip_milestone_data_with_dates.Drop\", \"ip_milestone_data_with_dates.drop case\", \"ip_milestone_data_with_dates.Drop color\", \"ip_milestone_data_with_dates.Drop color with current ww\", \"ip_milestone_data_with_dates.Drop label\", \"ip_milestone_data_with_dates.drop matrix order\", \"ip_milestone_data_with_dates.Drop order\", \"ip_milestone_data_with_dates.Drop with space\", \"ip_milestone_data_with_dates.drop_details_color_code\", \"ip_milestone_data_with_dates.DropType\", \"ip_milestone_data_with_dates.IpConfigurationId\", \"ip_milestone_data_with_dates.IpConfigurationId, MilestoneId\", \"ip_milestone_data_with_dates.IpConfigurationId, ww\", \"ip_milestone_data_with_dates.is 1 week late\", \"ip_milestone_data_with_dates.is 2 or more weeks late\", \"ip_milestone_data_with_dates.is complete\", \"ip_milestone_data_with_dates.is current WW\", \"ip_milestone_data_with_dates.is future drop\", \"ip_milestone_data_with_dates.Is gap milestone\", \"ip_milestone_data_with_dates.is late\", \"ip_milestone_data_with_dates.is missing trend or por\", \"ip_milestone_data_with_dates.is relevant ww\", \"ip_milestone_data_with_dates.is stale\", \"ip_milestone_data_with_dates.is standard drop\", \"ip_milestone_data_with_dates.is ww of drop\", \"ip_milestone_data_with_dates.late_legend\", \"ip_milestone_data_with_dates.late_legend_int\", \"ip_milestone_data_with_dates.LeadProduct\", \"ip_milestone_data_with_dates.MilestoneId\", \"ip_milestone_data_with_dates.Month\", \"ip_milestone_data_with_dates.PorExactDate\", \"ip_milestone_data_with_dates.PorYYYYWW\", \"ip_milestone_data_with_dates.project_view_drop_legend\", \"ip_milestone_data_with_dates.Quarter\", \"ip_milestone_data_with_dates.Reuse\", \"ip_milestone_data_with_dates.Revision\", \"ip_milestone_data_with_dates.Stale?\", \"ip_milestone_data_with_dates.Trend Offset\", \"ip_milestone_data_with_dates.TrendExactDate\", \"ip_milestone_data_with_dates.TrendYYYYWW\", \"ip_milestone_data_with_dates.TrendYYYYWW (PorYYYYWW)\", \"ip_milestone_data_with_dates.UsingProducts\", \"ip_milestone_data_with_dates.UsingProductsSummary\", \"ip_milestone_data_with_dates.WW\", \"ip_milestone_data_with_dates.WW start date\", \"ip_milestone_data_with_dates.Year\", \"ip_milestone_data_with_dates.YearQuarter\", \"ip_milestone_data_with_dates.YY'WW\"}},",
                "            {Cube.AddMeasureColumn, \"First no blank drop\", \"[Measures].[First no blank drop]\"},",
                "            {Cube.AddMeasureColumn, \"First no blank drop color\", \"[Measures].[First no blank drop color]\"},",
                "            {Cube.AddMeasureColumn, \"First no blank is late\", \"[Measures].[First no blank is late]\"},",
                "            {Cube.AddMeasureColumn, \"Cumulative plan\", \"[Measures].[Cumulative plan]\"},",
                "            {Cube.AddMeasureColumn, \"Cumulative actual\", \"[Measures].[Cumulative actual]\"},",
                "            {Cube.AddMeasureColumn, \"Cumulative actual RTL0P5\", \"[Measures].[Cumulative actual RTL0P5]\"},",
                "            {Cube.AddMeasureColumn, \"Cumulative actual RTL0P8\", \"[Measures].[Cumulative actual RTL0P8]\"},",
                "            {Cube.AddMeasureColumn, \"Cumulative actual RTL1P0\", \"[Measures].[Cumulative actual RTL1P0]\"},",
                "            {Cube.AddMeasureColumn, \"Cumulative actual POLO\", \"[Measures].[Cumulative actual POLO]\"},",
                "            {Cube.AddMeasureColumn, \"Cumulative actual PROD\", \"[Measures].[Cumulative actual PROD]\"},",
                "            {Cube.AddMeasureColumn, \"Cumulative plan RTL0P5\", \"[Measures].[Cumulative plan RTL0P5]\"},",
                "            {Cube.AddMeasureColumn, \"Cumulative plan RTL0P8\", \"[Measures].[Cumulative plan RTL0P8]\"},",
                "            {Cube.AddMeasureColumn, \"Cumulative plan RTL1P0\", \"[Measures].[Cumulative plan RTL1P0]\"},",
                "            {Cube.AddMeasureColumn, \"Cumulative plan POLO\", \"[Measures].[Cumulative plan POLO]\"},",
                "            {Cube.AddMeasureColumn, \"Cumulative plan PROD\", \"[Measures].[Cumulative plan PROD]\"},",
                "            {Cube.AddMeasureColumn, \"First no blank drop color with current ww color\", \"[Measures].[First no blank drop color with current ww color]\"},",
                "            {Cube.AddMeasureColumn, \"First no blank drop with current ww\", \"[Measures].[First no blank drop with current ww]\"},",
                "            {Cube.AddMeasureColumn, \"current ww value\", \"[Measures].[current ww value]\"},",
                "            {Cube.AddMeasureColumn, \"Trend AGG NewLine\", \"[Measures].[Trend AGG NewLine]\"},",
                "            {Cube.AddMeasureColumn, \"POR AGG NewLine\", \"[Measures].[POR AGG NewLine]\"},",
                "            {Cube.AddMeasureColumn, \"Trend Offset AGG NewLine\", \"[Measures].[Trend Offset AGG NewLine]\"},",
                "            {Cube.AddMeasureColumn, \"Count of milestones\", \"[Measures].[Count of milestones]\"},",
                "            {Cube.AddMeasureColumn, \"Count of milestones - ignore drop column\", \"[Measures].[Count of milestones - ignore drop column]\"},",
                "            {Cube.AddMeasureColumn, \"Count of drops with_dates\", \"[Measures].[Count of drops with_dates]\"},",
                "            {Cube.AddMeasureColumn, \"Count of completed drops with_dates\", \"[Measures].[Count of completed drops with_dates]\"},",
                "            {Cube.AddMeasureColumn, \"Count of completed on time drops with_dates\", \"[Measures].[Count of completed on time drops with_dates]\"},",
                "            {Cube.AddMeasureColumn, \"Count of completed late drops with_dates\", \"[Measures].[Count of completed late drops with_dates]\"},",
                "            {Cube.AddMeasureColumn, \"Count of completed late drops with % with_dates\", \"[Measures].[Count of completed late drops with % with_dates]\"},",
                "            {Cube.AddMeasureColumn, \"Count of completed on time drops with % with_dates\", \"[Measures].[Count of completed on time drops with % with_dates]\"},",
                "            {Cube.AddMeasureColumn, \"Count of completed 1 week late drops with_dates\", \"[Measures].[Count of completed 1 week late drops with_dates]\"},",
                "            {Cube.AddMeasureColumn, \"Count of completed 1 week late drops with % with_dates\", \"[Measures].[Count of completed 1 week late drops with % with_dates]\"},",
                "            {Cube.AddMeasureColumn, \"Count of completed missing trend or por drops with_dates\", \"[Measures].[Count of completed missing trend or por drops with_dates]\"},",
                "            {Cube.AddMeasureColumn, \"Count of completed missing trend or por drops with % with_dates\", \"[Measures].[Count of completed missing trend or por drops with % with_dates]\"},",
                "            {Cube.AddMeasureColumn, \"complete_legend\", \"[Measures].[complete_legend]\"},",
                "            {Cube.AddMeasureColumn, \"First no blank is complete\", \"[Measures].[First no blank is complete]\"}",
                "        }),",
                "    #\"Duplicated Column\" = Table.DuplicateColumn(#\"Added Items\", \"POR AGG NewLine\", \"POR AGG NewLine - Copy\"),",
                "    #\"Duplicated Column1\" = Table.DuplicateColumn(#\"Duplicated Column\", \"Trend AGG NewLine\", \"Trend AGG NewLine - Copy\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Duplicated Column1\",{{\"POR AGG NewLine - Copy\", \"POR AGG NewLine_num\"}, {\"Trend AGG NewLine - Copy\", \"Trend AGG NewLine_num\"}}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"Trend AGG NewLine_num\", Int64.Type}, {\"POR AGG NewLine_num\", Int64.Type}})",
                "in",
                "    #\"Changed Type\""
              ]
            }
          }
        ]
      },
      {
        "name": "IE Contract Status",
        "columns": [
          {
            "name": "Contract",
            "dataType": "string",
            "sourceColumn": "Contract",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "configuration",
            "dataType": "string",
            "sourceColumn": "configuration",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "POR",
            "dataType": "string",
            "sourceColumn": "POR",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "TREND",
            "dataType": "string",
            "sourceColumn": "TREND",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Contract Status",
            "dataType": "string",
            "sourceColumn": "Contract Status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "id",
            "dataType": "int64",
            "sourceColumn": "id",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "drop",
            "dataType": "string",
            "sourceColumn": "drop",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IP Execution Commits TrendDate",
            "dataType": "int64",
            "sourceColumn": "IP Execution Commits TrendDate",
            "sourceProviderType": "Integer"
          },
          {
            "name": "IP Execution Commits PORDate",
            "dataType": "int64",
            "sourceColumn": "IP Execution Commits PORDate",
            "sourceProviderType": "Integer"
          },
          {
            "name": "flag",
            "dataType": "int64",
            "sourceColumn": "flag",
            "sourceProviderType": "Integer"
          }
        ],
        "partitions": [
          {
            "name": "IE Contract Status",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select ",
                "distinct",
                "[Contract]",
                "--,release_affected",
                ",map.configuration",
                ",POR",
                ",TREND",
                ",[Contract Status]",
                ",id",
                ",drop",
                ",trendyyyyww as [IP Execution Commits TrendDate]",
                ",poryyyyww as [IP Execution Commits PORDate]",
                ",CASE WHEN",
                " trendyyyyww > poryyyyww THEN 1",
                "ELSE 0 END as [flag]",
                "from ",
                "(select [ip_leadership.support.customer_project] as [Contract]",
                ", [release_affected]",
                ",[ip_leadership.support.ww_contract_close_por] as POR",
                ",[ip_leadership.support.ww_contract_close_trend] as TREND",
                ",status as [Contract Status]",
                ",id",
                "from [es.ip_leadership.support] a",
                "where 1=1 ",
                "and [ip_leadership.support.type] = 'contract'",
                "",
                "",
                "--and ww = datepart(ww, getutcdate())",
                "group by",
                "[ip_leadership.support.customer_project]",
                ", [release_affected]",
                ",[ip_leadership.support.ww_contract_close_por]",
                ",[ip_leadership.support.ww_contract_close_trend] ",
                ", status ",
                ",id",
                ")main",
                "left join (select distinct configuration, drop, trendyyyyww, poryyyyww from v_ipg_carbon_milestone where devorg = 'ipg' and ",
                "drop ='IP Execution Commit (IE)' )as map ",
                "ON ','+ main.[release_affected] +',' LIKE '%,' +map.configuration+ ',%'",
                "--WHERE 1=1 AND map.configuration IS NOT NULL",
                "group by",
                "[Contract]",
                "--,release_affected",
                ",map.configuration",
                ",POR",
                ",TREND",
                ",[Contract Status]",
                ",id",
                ",drop",
                ",trendyyyyww",
                ",poryyyyww"
              ],
              "dataSource": "Custom"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "distinct",
                  "[Contract]",
                  "--,release_affected",
                  ",map.configuration",
                  ",POR",
                  ",TREND",
                  ",[Contract Status]",
                  ",id",
                  ",drop",
                  ",trendyyyyww as [IP Execution Commits TrendDate]",
                  ",poryyyyww as [IP Execution Commits PORDate]",
                  ",CASE WHEN",
                  " trendyyyyww > poryyyyww THEN 1",
                  "ELSE 0 END as [flag]",
                  "from ",
                  "(select [ip_leadership.support.customer_project] as [Contract]",
                  ", [release_affected]",
                  ",[ip_leadership.support.ww_contract_close_por] as POR",
                  ",[ip_leadership.support.ww_contract_close_trend] as TREND",
                  ",status as [Contract Status]",
                  ",id",
                  "from [es.ip_leadership.support] a",
                  "where 1=1 ",
                  "and [ip_leadership.support.type] = 'contract'",
                  "",
                  "",
                  "--and ww = datepart(ww, getutcdate())",
                  "group by",
                  "[ip_leadership.support.customer_project]",
                  ", [release_affected]",
                  ",[ip_leadership.support.ww_contract_close_por]",
                  ",[ip_leadership.support.ww_contract_close_trend] ",
                  ", status ",
                  ",id",
                  ")main",
                  "left join (select distinct configuration, drop, trendyyyyww, poryyyyww from v_ipg_carbon_milestone where devorg = 'ipg' and ",
                  "drop ='IP Execution Commit (IE)' )as map ",
                  "ON ','+ main.[release_affected] +',' LIKE '%,' +map.configuration+ ',%'",
                  "--WHERE 1=1 AND map.configuration IS NOT NULL",
                  "group by",
                  "[Contract]",
                  "--,release_affected",
                  ",map.configuration",
                  ",POR",
                  ",TREND",
                  ",[Contract Status]",
                  ",id",
                  ",drop",
                  ",trendyyyyww",
                  ",poryyyyww</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "distinct",
              "[Contract]",
              "--,release_affected",
              ",map.configuration",
              ",POR",
              ",TREND",
              ",[Contract Status]",
              ",id",
              ",drop",
              ",trendyyyyww as [IP Execution Commits TrendDate]",
              ",poryyyyww as [IP Execution Commits PORDate]",
              ",CASE WHEN",
              " trendyyyyww > poryyyyww THEN 1",
              "ELSE 0 END as [flag]",
              "from ",
              "(select [ip_leadership.support.customer_project] as [Contract]",
              ", [release_affected]",
              ",[ip_leadership.support.ww_contract_close_por] as POR",
              ",[ip_leadership.support.ww_contract_close_trend] as TREND",
              ",status as [Contract Status]",
              ",id",
              "from [es.ip_leadership.support] a",
              "where 1=1 ",
              "and [ip_leadership.support.type] = 'contract'",
              "",
              "",
              "--and ww = datepart(ww, getutcdate())",
              "group by",
              "[ip_leadership.support.customer_project]",
              ", [release_affected]",
              ",[ip_leadership.support.ww_contract_close_por]",
              ",[ip_leadership.support.ww_contract_close_trend] ",
              ", status ",
              ",id",
              ")main",
              "left join (select distinct configuration, drop, trendyyyyww, poryyyyww from v_ipg_carbon_milestone where devorg = 'ipg' and ",
              "drop ='IP Execution Commit (IE)' )as map ",
              "ON ','+ main.[release_affected] +',' LIKE '%,' +map.configuration+ ',%'",
              "--WHERE 1=1 AND map.configuration IS NOT NULL",
              "group by",
              "[Contract]",
              "--,release_affected",
              ",map.configuration",
              ",POR",
              ",TREND",
              ",[Contract Status]",
              ",id",
              ",drop",
              ",trendyyyyww",
              ",poryyyyww"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "IE Contract Status"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "distinct",
              "[Contract]",
              "--,release_affected",
              ",map.configuration",
              ",POR",
              ",TREND",
              ",[Contract Status]",
              ",id",
              ",drop",
              ",trendyyyyww as [IP Execution Commits TrendDate]",
              ",poryyyyww as [IP Execution Commits PORDate]",
              ",CASE WHEN",
              " trendyyyyww > poryyyyww THEN 1",
              "ELSE 0 END as [flag]",
              "from ",
              "(select [ip_leadership.support.customer_project] as [Contract]",
              ", [release_affected]",
              ",[ip_leadership.support.ww_contract_close_por] as POR",
              ",[ip_leadership.support.ww_contract_close_trend] as TREND",
              ",status as [Contract Status]",
              ",id",
              "from [es.ip_leadership.support] a",
              "where 1=1 ",
              "and [ip_leadership.support.type] = 'contract'",
              "",
              "",
              "--and ww = datepart(ww, getutcdate())",
              "group by",
              "[ip_leadership.support.customer_project]",
              ", [release_affected]",
              ",[ip_leadership.support.ww_contract_close_por]",
              ",[ip_leadership.support.ww_contract_close_trend] ",
              ", status ",
              ",id",
              ")main",
              "left join (select distinct configuration, drop, trendyyyyww, poryyyyww from v_ipg_carbon_milestone where devorg = 'ipg' and ",
              "drop ='IP Execution Commit (IE)' )as map ",
              "ON ','+ main.[release_affected] +',' LIKE '%,' +map.configuration+ ',%'",
              "--WHERE 1=1 AND map.configuration IS NOT NULL",
              "group by",
              "[Contract]",
              "--,release_affected",
              ",map.configuration",
              ",POR",
              ",TREND",
              ",[Contract Status]",
              ",id",
              ",drop",
              ",trendyyyyww",
              ",poryyyyww</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "DistinctContracts",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Contract",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Contract]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": " DISTINCT(SELECTCOLUMNS(ContractStatus, \"Contract\", ContractStatus[Contract]))"
            }
          }
        ]
      },
      {
        "name": "milestone_key",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "MilestoneId",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[MilestoneId]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                " FILTER(DISTINCT(",
                "    UNION(",
                "        SELECTCOLUMNS(ip_milestone_data_with_dates, \"MilestoneId\", ip_milestone_data_with_dates[MilestoneId]),",
                "        SELECTCOLUMNS(ip_milestone_data, \"MilestoneId\", ip_milestone_data[MilestoneId])",
                "    )), [MilestoneId]<>BLANK())"
              ]
            }
          }
        ]
      },
      {
        "name": "Snapshot",
        "columns": [
          {
            "name": "soc",
            "dataType": "string",
            "sourceColumn": "soc",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "acronym",
            "dataType": "string",
            "sourceColumn": "acronym",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ti",
            "dataType": "int64",
            "sourceColumn": "ti",
            "sourceProviderType": "Integer"
          },
          {
            "name": "anchor_product",
            "dataType": "string",
            "sourceColumn": "anchor_product",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "engineering_team",
            "dataType": "string",
            "sourceColumn": "engineering_team",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "business_unit",
            "dataType": "string",
            "sourceColumn": "business_unit",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "customer_manager",
            "dataType": "string",
            "sourceColumn": "customer_manager",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "plc_stage",
            "dataType": "string",
            "sourceColumn": "plc_stage",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "contract_status",
            "dataType": "string",
            "sourceColumn": "contract_status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "contract_start",
            "dataType": "string",
            "sourceColumn": "contract_start",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "contract_por",
            "dataType": "string",
            "sourceColumn": "contract_por",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "contract_trend",
            "dataType": "string",
            "sourceColumn": "contract_trend",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "status",
            "dataType": "string",
            "sourceColumn": "status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "escalation",
            "dataType": "string",
            "sourceColumn": "escalation",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "trend",
            "dataType": "string",
            "sourceColumn": "trend",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "top_issues",
            "dataType": "string",
            "sourceColumn": "top_issues",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "soc_feedback",
            "dataType": "string",
            "sourceColumn": "soc_feedback",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww",
            "dataType": "int64",
            "sourceColumn": "ww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "sample_time",
            "dataType": "dateTime",
            "sourceColumn": "sample_time",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          }
        ],
        "partitions": [
          {
            "name": "Snapshot",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select * ",
                "from v_ipg_customer_management_weekly_snapshot"
              ],
              "dataSource": "actis_db"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select * ",
                  "from v_ipg_customer_management_weekly_snapshot</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Dominant Color S",
            "expression": " if ([Red Ratio S] > 0, 3, if([Yellow Ratio S]> 0, 2, 1))"
          },
          {
            "name": "Red Ratio S",
            "expression": " calculate(COUNT(Snapshot[Status]), FILTER(Snapshot, Snapshot[Status] = \"Red\"))"
          },
          {
            "name": "Green Ratio S",
            "expression": " calculate(COUNT(Snapshot[Status]), FILTER(Snapshot, Snapshot[Status] = \"Green\"))"
          },
          {
            "name": "Yellow Ratio S",
            "expression": " calculate(COUNT(Snapshot[Status]), FILTER(Snapshot, Snapshot[Status] = \"Yellow\"))"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select * ",
              "from v_ipg_customer_management_weekly_snapshot"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Snapshot"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select * ",
              "from v_ipg_customer_management_weekly_snapshot</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "IBISnapshot",
        "columns": [
          {
            "name": "ibi_bulk_id",
            "dataType": "int64",
            "sourceColumn": "ibi_bulk_id",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "ibi_row_id",
            "dataType": "int64",
            "sourceColumn": "ibi_row_id",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ibi_ins_dtm",
            "dataType": "dateTime",
            "sourceColumn": "ibi_ins_dtm",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ibi_updt_dtm",
            "dataType": "dateTime",
            "sourceColumn": "ibi_updt_dtm",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "Soc",
            "dataType": "string",
            "sourceColumn": "Soc",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Acronym",
            "dataType": "string",
            "sourceColumn": "Acronym",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "TI",
            "dataType": "int64",
            "sourceColumn": "TI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Anchor Product",
            "dataType": "string",
            "sourceColumn": "Anchor Product",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Engineering Team",
            "dataType": "string",
            "sourceColumn": "Engineering Team",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Business Unit",
            "dataType": "string",
            "sourceColumn": "Business Unit",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Customer Manager",
            "dataType": "string",
            "sourceColumn": "Customer Manager",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PLC Stage",
            "dataType": "string",
            "sourceColumn": "PLC Stage",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Contract Status",
            "dataType": "string",
            "sourceColumn": "Contract Status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Contract Start ",
            "dataType": "string",
            "sourceColumn": "Contract Start ",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Contract POR",
            "dataType": "string",
            "sourceColumn": "Contract POR",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Contract Trend",
            "dataType": "string",
            "sourceColumn": "Contract Trend",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Status",
            "dataType": "string",
            "sourceColumn": "Status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Escalation",
            "dataType": "string",
            "sourceColumn": "Escalation",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Trend",
            "dataType": "string",
            "sourceColumn": "Trend",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Top issues",
            "dataType": "string",
            "sourceColumn": "Top issues",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SoC Feedback",
            "dataType": "string",
            "sourceColumn": "SoC Feedback",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "WW",
            "dataType": "int64",
            "sourceColumn": "WW",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Sampletime",
            "dataType": "dateTime",
            "sourceColumn": "Sampletime",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "currentww",
            "dataType": "int64",
            "sourceColumn": "currentww"
          },
          {
            "type": "calculated",
            "name": "IsPrevWW",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " if(IBISnapshot[WW] = IBISnapshot[currentww] -1, 1,0)"
          }
        ],
        "partitions": [
          {
            "name": "Snapshot1",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select *",
                ",datepart(ww,getutcdate()) as currentww",
                "from V_BM_IPG_CUSTOMER_MANAGEMENT_WEEKLY_SNAPSHOT"
              ],
              "dataSource": "Custom"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select *",
                  ",datepart(ww,getutcdate()) as currentww",
                  "from V_BM_IPG_CUSTOMER_MANAGEMENT_WEEKLY_SNAPSHOT</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Dominant Color_S",
            "expression": " if ([Red Ratio_S] > 0, 3, if([Yellow Ratio_S]> 0, 2, 1))"
          },
          {
            "name": "Red Ratio_S",
            "expression": [
              " --calculate(COUNT(IBISnapshot[Status]), FILTER(IBISnapshot, IBISnapshot[Status] = \"Red\"))",
              "calculate(COUNT(IBISnapshot[Status]),IBISnapshot[Status] = \"Red\", IBISnapshot[IsPrevWW] = 1)"
            ]
          },
          {
            "name": "Yellow Ratio_S",
            "expression": [
              "-- calculate(COUNT(IBISnapshot[Status]), FILTER(IBISnapshot, IBISnapshot[Status] = \"Yellow\"))",
              "calculate(COUNT(IBISnapshot[Status]),IBISnapshot[Status] = \"Yellow\", IBISnapshot[IsPrevWW] = 1)"
            ]
          },
          {
            "name": "Green Ratio_S",
            "expression": [
              " --calculate(COUNT(IBISnapshot[Status]), FILTER(IBISnapshot, IBISnapshot[Status] = \"Green\"))",
              "calculate(COUNT(IBISnapshot[Status]),IBISnapshot[Status] = \"Green\", IBISnapshot[IsPrevWW] = 1)"
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select *",
              ",datepart(ww,getutcdate()) as currentww",
              "from V_BM_IPG_CUSTOMER_MANAGEMENT_WEEKLY_SNAPSHOT"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Snapshot1"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select *",
              ",datepart(ww,getutcdate()) as currentww",
              "from V_BM_IPG_CUSTOMER_MANAGEMENT_WEEKLY_SNAPSHOT</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "5f361563-838e-46fa-a5f8-92d36395e8a2",
        "fromTable": "iBI Query",
        "fromColumn": "Tapein",
        "toTable": "v_time_day",
        "toColumn": "Intel Year-Work Week"
      },
      {
        "name": "406e843c-ddf2-47d4-b55d-36e4bdb14d48",
        "fromTable": "IP_Customer_Enablement_Sheet",
        "fromColumn": "Soc",
        "toTable": "iBI Query",
        "toColumn": "product"
      },
      {
        "name": "39ed322d-f886-41e5-9b44-85511f79c339",
        "fromTable": "IP_Customer_Enablement_Sheet",
        "fromColumn": "Soc",
        "toTable": "soc_data",
        "toColumn": "DieName",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "79ddf70c-6609-4583-8e1e-10a5f61d832a",
        "fromTable": "IP_Customer_Enablement_Sheet",
        "fromColumn": "Soc",
        "toTable": "QueryPRQDate",
        "toColumn": "DieName"
      },
      {
        "name": "bbe42b0e-c88f-48c1-b993-9bdb96b71fb3",
        "fromTable": "QueryPRQDate",
        "fromColumn": "prqdate",
        "toTable": "v_time_day_prq",
        "toColumn": "Intel Year-Work Week",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "1fab8753-5d92-40d8-b3e9-79692ca4db95",
        "fromTable": "IP_Customer_Enablement_Sheet",
        "fromColumn": "Soc",
        "toTable": "IP Count",
        "toColumn": "SoC"
      },
      {
        "name": "e871def4-80bd-4131-b6d9-a31151b8d5c9",
        "fromTable": "IE Contract Status",
        "fromColumn": "Contract",
        "toTable": "DistinctContracts",
        "toColumn": "Contract",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "05d4077e-313b-4fd2-9417-1176c0d49a0d",
        "fromTable": "ContractStatus",
        "fromColumn": "Contract",
        "toTable": "DistinctContracts",
        "toColumn": "Contract",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "e086f118-fda6-43ca-86f2-503304deaf66",
        "fromTable": "ip_soc_mapping",
        "fromColumn": "DieName",
        "toTable": "DistinctContracts",
        "toColumn": "Contract",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "0a80dea9-b3de-45a1-8ef3-748c2bd96919",
        "fromTable": "ip_soc_mapping",
        "fromColumn": "IpConfigurationId, MilestoneId",
        "toTable": "ip_milestone_data",
        "toColumn": "IpConfigurationId, MilestoneId",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "175c5593-74ac-42bb-8ebe-519448faf642",
        "fromTable": "ip_soc_mapping",
        "fromColumn": "IpConfigurationId",
        "toTable": "ip_data",
        "toColumn": "IpConfigurationId",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "5fdbec10-12f6-41e6-82e2-c9f28db154cd",
        "fromTable": "ip_milestone_data",
        "fromColumn": "MilestoneId",
        "toTable": "milestone_key",
        "toColumn": "MilestoneId",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "49bc2298-c643-4c46-87e1-9692ba79ce6d",
        "fromTable": "ip_milestone_data_with_dates",
        "fromColumn": "MilestoneId",
        "toTable": "milestone_key",
        "toColumn": "MilestoneId",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "a18e0572-d263-4f6c-9903-1804d8b8fc33",
        "fromTable": "ip_data",
        "fromColumn": "IpConfigurationId",
        "toTable": "release_central_family",
        "toColumn": "IpConfigurationId"
      }
    ],
    "roles": [
      {
        "name": "IPG Dashboard Developer",
        "modelPermission": "administrator",
        "members": [
          {
            "memberName": "AMR\\IPG_Dashboard_Developers",
            "memberId": "S-1-5-21-725345543-602162358-527237240-4603422"
          }
        ]
      },
      {
        "name": "IPG Dashboard InternalUsers",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "AMR\\IPG_Dashboard_SuperUsers",
            "memberId": "S-1-5-21-725345543-602162358-527237240-4603439"
          }
        ]
      },
      {
        "name": "IPG Dashboard ExternalUsers",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "AMR\\IPG_Dashboard_Users",
            "memberId": "S-1-5-21-725345543-602162358-527237240-4603440"
          }
        ]
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "500"
      }
    ]
  },
  "id": "SemanticModel"
}